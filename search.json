[{"path":[]},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement slwood89@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 MicroMoB authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/Advanced.html","id":"writing-new-packages","dir":"Articles","previous_headings":"","what":"Writing new packages","title":"Advanced topics","text":"Often base way extend Micro-MoB write new package depends implements specific new models needed, depends bits core computation provided Micro-MoB. steps writing new package depends Micro-MoB : Add MicroMoB Imports: list package’s DESCRIPTION want depend latest version Micro-MoB, rather CRAN, add dd-harp/MicroMoB Remotes: list DESCRIPTION use methods Micro-MoB recommend importing using roxygen2 tags, example @importFrom MicroMoB compute_q import generic method compute_q, rather using :: operator every instance. Please note need import generic, class-specific methods, R’s namespace lookup find right function . see example extension package, please take look MicroWNV, adds new host component, birds, modeling West Nile virus.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/Advanced.html","id":"writing-new-models","dir":"Articles","previous_headings":"","what":"Writing new models","title":"Advanced topics","text":"write model component means one must write methods fulfill component’s interface, ensure methods return correct data structure. Information methods can found function reference component. addition, new model must setup function, takes parameters, argument checking, attaches new object correct name class attached model object returned make_MicroMoB(). example, make new mosquito model, class MyModel, one need following: Write function setup_mosquito_MyModel attaches object (usually list) model environment class attribute assigned \"MyModel\". Write methods interface compute_f.MyModel, compute_q.MyModel, compute_Z.MyModel, compute_oviposit.MyModel. Information method expected compute return can found . Write step (updating) function, step_mosquitoes.MyModel. One can optionally allow class attribute model list 2 elements allow dispatching stochastic deterministic step updates, case one additionally write step_mosquitoes.MyModel_stochastic step_mosquitoes.MyModel_deterministic. Please look source code Ross-Macdonald mosquito model see . Write basic tests model, go tests/testthat. minimum, tests confirm model can set properly produces correct results updated time step.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/Advanced.html","id":"plumber-web-api","dir":"Articles","previous_headings":"","what":"Plumber web API","title":"Advanced topics","text":"Micro-MoB includes limited support configuring running models via web API, using Plumber package. APIs stored inst/plumber/APINAME/plumber.R, APINAME name specific API. simple API can started within R running following code: web APIs use JSON files configure model, please see get_config_COMPONENT_MODEL function documentation files specified. web API functionality highly unstable please aware may large changes version version.","code":"library(MicroMoB) plumb_api(package = \"MicroMoB\", name = \"mosquito\") %>% pr_run()"},{"path":"https://dd-harp.github.io/MicroMoB/articles/BH_aqua.html","id":"deterministic-model","dir":"Articles","previous_headings":"","what":"Deterministic model","title":"Beverton-Holt aquatic model","text":"state updating equation follows: \\[\\begin{equation} L_{t+1} = eggs + (1-molt) \\cdot surv \\cdot L_{t} \\cdot \\left( \\frac{K}{L_{t}+K} \\right) \\\\ A_{t} = molt \\cdot surv \\cdot L_{t} \\cdot \\left( \\frac{K}{L_{t}+K} \\right) \\end{equation}\\]","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/BH_aqua.html","id":"stochastic-model","dir":"Articles","previous_headings":"","what":"Stochastic model","title":"Beverton-Holt aquatic model","text":"stochastic model time step, first draw number survivors: \\[\\begin{equation} survivors \\sim \\mathrm{binomial}(L, surv \\cdot \\left( \\frac{K}{L_{t}+K} \\right) ) \\end{equation}\\] number emerge also binomial random variate: \\[\\begin{equation} emerge \\sim \\mathrm{binomial}(survivors, molt) \\end{equation}\\] state updated: \\[\\begin{equation} L_{t+1} = eggs + survivors - emerge \\\\ A_{t} = emerge \\end{equation}\\]","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/BH_aqua.html","id":"deterministic-equilibrium","dir":"Articles","previous_headings":"","what":"Deterministic equilibrium","title":"Beverton-Holt aquatic model","text":"Despite nonlinear equation, can solve equilibrium. assume eggs known, desired daily emergence known (lambda, BH model’s notation). solve K L: \\[\\begin{equation} L = \\lambda \\left( \\frac{1}{molt} - 1 \\right) + eggs \\\\ K = \\frac{-\\lambda L}{\\lambda - L \\cdot molt \\cdot surv} \\end{equation}\\] can set simulation using RM mosquito model check everything equilibrium. First calculate equilibrium values. use components aquatic adult mosquito components. Let’s set model. use make_MicroMoB() set base model object, setup_aqua_BH() Beverton-Holt aquatic model chosen parameters. setup_mosquito_RM() set Ross-Macdonald model adult mosquito dynamics. run deterministic simulation store output matrix. Now run model, using option stochastic = TRUE dynamics, draw 10 trajectories. Now process output plot results. Deterministic solutions solid lines stochastic trajectory faint line.","code":"patches <- 1 tmax <- 1e2  M <- 120 p <- 0.9 lambda <- M*(1-p)  nu <- 25 f <- 0.3 eggs <- nu * f * M  # static pars molt <-  0.1 surv <- 0.9  # solve L L <- lambda * ((1/molt) - 1) + eggs K <- - (lambda * L) / (lambda - L*molt*surv) # deterministic run mod <- make_MicroMoB(tmax = tmax, p = patches) setup_aqua_BH(model = mod, stochastic = FALSE, molt = molt, surv = surv, K = K, L = L) setup_mosquito_RM(model = mod, stochastic = FALSE, f = f, q = 0.9, eip = 10, p = p, psi = diag(1), nu = nu, M = M, Y = 0, Z = 0)  out_det <- data.table::CJ(day = 1:tmax, state = c('L', 'A', 'M'), value = NaN) out_det <- out_det[c('L', 'A', 'M'), on=\"state\"] data.table::setkey(out_det, day)  while (get_tnow(mod) <= tmax) {      step_aqua(model = mod)   step_mosquitoes(model = mod)      out_det[day == get_tnow(mod) & state == 'L', value := mod$aqua$L]   out_det[day == get_tnow(mod) & state == 'A', value := mod$aqua$A]   out_det[day == get_tnow(mod) & state == 'M', value := mod$mosquito$M]    mod$global$tnow <- mod$global$tnow + 1L } # stochastic runs out_sto <- mclapply(X = 1:10, FUN = function(runid) {      mod <- make_MicroMoB(tmax = tmax, p = patches)   setup_aqua_BH(model = mod, stochastic = TRUE, molt = molt, surv = surv, K = K, L = L)   setup_mosquito_RM(model = mod, stochastic = TRUE, f = f, q = 0.9, eip = 10, p = p, psi = diag(1), nu = nu, M = M, Y = 0, Z = 0)      out <- data.table::CJ(day = 1:tmax, state = c('L', 'A', 'M'), value = NaN)   out <- out[c('L', 'A', 'M'), on=\"state\"]   data.table::setkey(out, day)      while (get_tnow(mod) <= tmax) {          step_aqua(model = mod)     step_mosquitoes(model = mod)          out[day == get_tnow(mod) & state == 'L', value := mod$aqua$L]     out[day == get_tnow(mod) & state == 'A', value := mod$aqua$A]     out[day == get_tnow(mod) & state == 'M', value := mod$mosquito$M]        mod$global$tnow <- mod$global$tnow + 1L   }      out[, 'run' := as.integer(runid)]    return(out) })  out_sto <- data.table::rbindlist(out_sto) ggplot(out_sto) +     geom_line(aes(x = day, y = value, color = state, group = run), alpha = 0.35) +     geom_line(data = out_det, aes(x = day, y = value, color = state)) +     facet_wrap(. ~ state, scales = \"free\")"},{"path":"https://dd-harp.github.io/MicroMoB/articles/BQ_mosquito.html","id":"deterministic-model","dir":"Articles","previous_headings":"","what":"Deterministic model","title":"Simple behavioral state mosquito model","text":"deterministic behavioral state model following form: \\[\\begin{equation} \\left[ \\begin{array}{cc} B_{t+1}  \\\\    Q_{t+1}  \\\\ \\end{array} \\right] = \\left[ \\begin{array}{ccc} (1 - \\psi_b) \\Psi_{b  b} &  \\psi_q \\Psi_{q  b} \\\\ \\psi_b \\Psi_{b  q} &  (1 - \\psi_q) \\Psi_{q  q}  \\\\ \\end{array} \\right]   \\left[ \\begin{array}{cc} p_b B_{t} \\\\    p_q Q_{t} \\\\    \\end{array} \\right] + \\left[ \\begin{array}{c} \\Lambda_{t}  \\\\    0 \\\\ \\end{array} \\right] \\end{equation}\\] state column vector \\(\\left[\\begin{array}{cc} B \\\\ Q \\\\ \\end{array}\\right]\\). assume \\(p\\) locations mosquitoes go seek blood hosts, first \\(p\\) elements correspond number mosquitoes \\(B\\) state places. \\(l\\) locations mosquitoes go oviposit (aquatic habitats), last \\(l\\) elements vector mosquitoes \\(Q\\) state. requirement set points mosquitoes blood feed oviposit distinct, although may . infection states similar Ross-Macdonald model, see vignette(\"RM_mosquito\") details. parameters state updating equation : \\(\\psi_b\\): probability successful blood feeding (vector length \\(p\\)); parameter computed \\(f, q\\) (calculated bloodmeal algorithm) \\(1-e^{-fq}\\). \\(\\psi_q\\): probability successful oviposition (vector length \\(l\\)). \\(\\Psi_{b b}\\): transition probability matrix movement among blood feeding haunts. dimension \\(p\\times p\\), columns sum 1 (note state vectors right). \\(\\Psi_{q b}\\): transition probability matrix movement aquatic habitats blood feeding haunts. dimension \\(p\\times l\\). \\(\\Psi_{b q}\\): transition probability matrix movement blood feeding haunts aquatic habitats. dimension \\(l\\times p\\). \\(\\Psi_{q q}\\): transition probability matrix movement among aquatic habitats. dimension \\(l\\times l\\). \\(p_{B}\\): daily survival probability blood feeding mosquitoes. \\(p_{Q}\\): daily survival probability ovipositing mosquitoes.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/BQ_mosquito.html","id":"stochastic-model","dir":"Articles","previous_headings":"","what":"Stochastic model","title":"Simple behavioral state mosquito model","text":"stochastic model similar updating dynamics deterministic implementation, except survival success probabilities used binomial draws movement drawn multinomial distribution.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/BQ_mosquito.html","id":"simulation","dir":"Articles","previous_headings":"","what":"Simulation","title":"Simple behavioral state mosquito model","text":"assume \\(p = l = 1\\) total mosquito density \\(M = B + Q\\) known, want solve emergence rate \\(\\Lambda\\) system equilibrium. Rewriting equations substitute \\(Q = M - B\\) \\(B = M - Q\\) solve state variables : \\[\\begin{equation} Q = \\frac{Mp_{B}\\Psi_{B}}{p_{B}\\Psi_{B} - p_{Q}(1-\\Psi_{Q}) + 1} \\\\ B = \\frac{M-Mp_{Q}(1-\\Psi_{Q})}{p_{B}\\Psi_{B} - p_{Q}(1-\\Psi_{Q}) + 1} \\end{equation}\\] first equation can simply rearranged yield: \\[\\begin{equation} \\Lambda = B - p_{B}(1-\\Psi_{B})B - p_{Q}\\Psi_{Q}Q \\end{equation}\\] now model 1 point type can set equilibrium. use Beverton-Holt model aquatic ecology demonstrated vignette(\"BH_aqua\"), parameterized provide correct equilibrium \\(\\Lambda\\). Let’s set model. use make_MicroMoB() set base model object, setup_aqua_BH() Beverton-Holt aquatic model chosen parameters. setup_mosquito_BQ() set behavioral state model adult mosquito dynamics. run deterministic simulation store output matrix. Note calculate f q parameters achieve correct PsiB probability; normally updated dynamically bloodmeal running mosquito-simulation set deterministically. Now run model, using option stochastic = TRUE dynamics, draw 10 trajectories. Now process output plot results. Deterministic solutions solid lines stochastic trajectory faint line.","code":"p <- l <- 1 tmax <- 1e2  M <- 120 pB <- 0.8 pQ <- 0.95 PsiB <- 0.5 PsiQ <- 0.85  B <- (M - (M*pQ*(1-PsiQ))) / ((pB*PsiB) - (pQ*(1-PsiQ)) + 1) Q <- (M*pB*PsiB) / ((pB*PsiB) - (pQ*(1-PsiQ)) + 1)  lambda <- B - (pB*(1-PsiB)*B) - (pQ*PsiQ*Q)  nu <- 25 eggs <- nu * PsiQ * Q  # static pars molt <-  0.1 surv <- 0.9  # solve L L <- lambda * ((1/molt) - 1) + eggs K <- - (lambda * L) / (lambda - L*molt*surv) # deterministic run mod <- make_MicroMoB(tmax = tmax, p = p, l = l) setup_aqua_BH(model = mod, stochastic = FALSE, molt = molt, surv = surv, K = K, L = L) setup_mosquito_BQ(model = mod, stochastic = FALSE, eip = 5, pB = pB, pQ = pQ, psiQ = PsiQ, Psi_bb = matrix(1), Psi_bq = matrix(1), Psi_qb = matrix(1), Psi_qq = matrix(1), nu = nu, M = c(B, Q), Y = matrix(0, nrow = 2, ncol = 6))  out_det <- data.table::CJ(day = 1:tmax, state = c('L', 'A', 'B', 'Q'), value = NaN) out_det <- out_det[c('L', 'A', 'B', 'Q'), on=\"state\"] data.table::setkey(out_det, day)  mod$mosquito$q <- 0.3 mod$mosquito$f <- log(1 - PsiB) / -0.3  while (get_tnow(mod) <= tmax) {      step_aqua(model = mod)   step_mosquitoes(model = mod)      out_det[day == get_tnow(mod) & state == 'L', value := mod$aqua$L]   out_det[day == get_tnow(mod) & state == 'A', value := mod$aqua$A]   out_det[day == get_tnow(mod) & state == 'B', value := mod$mosquito$M[1]]   out_det[day == get_tnow(mod) & state == 'Q', value := mod$mosquito$M[2]]      mod$global$tnow <- mod$global$tnow + 1L } # stochastic runs out_sto <- mclapply(X = 1:10, FUN = function(runid) {      mod <- make_MicroMoB(tmax = tmax, p = p, l = l)   setup_aqua_BH(model = mod, stochastic = TRUE, molt = molt, surv = surv, K = K, L = L)   setup_mosquito_BQ(model = mod, stochastic = TRUE, eip = 5, pB = pB, pQ = pQ, psiQ = PsiQ, Psi_bb = matrix(1), Psi_bq = matrix(1), Psi_qb = matrix(1), Psi_qq = matrix(1), nu = nu, M = c(B, Q), Y = matrix(0, nrow = 2, ncol = 6))      out <- data.table::CJ(day = 1:tmax, state = c('L', 'A', 'B', 'Q'), value = NaN)   out <- out[c('L', 'A', 'B', 'Q'), on=\"state\"]   data.table::setkey(out, day)    mod$mosquito$q <- 0.3   mod$mosquito$f <- log(1 - PsiB) / -0.3      while (get_tnow(mod) <= tmax) {     step_aqua(model = mod)     step_mosquitoes(model = mod)          out[day == get_tnow(mod) & state == 'L', value := mod$aqua$L]     out[day == get_tnow(mod) & state == 'A', value := mod$aqua$A]     out[day == get_tnow(mod) & state == 'B', value := mod$mosquito$M[1]]     out[day == get_tnow(mod) & state == 'Q', value := mod$mosquito$M[2]]          mod$global$tnow <- mod$global$tnow + 1L   }      out[, 'run' := as.integer(runid)]   return(out) }) out_sto <- data.table::rbindlist(out_sto)  ggplot(data = out_sto) +   geom_line(aes(x = day, y = value, color = state, group = run), alpha = 0.35) +   geom_line(data = out_det, aes(x = day, y = value, color = state)) +   facet_wrap(. ~ state, scales = \"free\")"},{"path":"https://dd-harp.github.io/MicroMoB/articles/Contributing.html","id":"issues","dir":"Articles","previous_headings":"","what":"Issues","title":"Contributing","text":"find bug, question use feature sufficient documentation, suggestion improvement, please leave issue GitHub repo. bug reports please include: Micro-MoB version Operating System R version Steps recreate Expected behaviour Actual behaviour","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/Contributing.html","id":"git","dir":"Articles","previous_headings":"","what":"Git","title":"Contributing","text":"use Git project. means use main, dev, feat/*, bug/*, hotfix/* branches. Please refer post information type branch. main: branch always stores last “production” release software, protected branch. pull request submitted main unless dev, meaning software version updated. dev: pull requests users made dev branch. branch protected deletion. feat: new significantly enhanced features made feat branches merged dev. feat/* branch merged dev, can deleted. bug: branches fix bugs, usually raised issue. bug/* branch merged dev, can deleted. hotfix: difference bug/* hotfix/* branch hotfix small quick fixes (misspellings, incorrect arguments, etc.) short-lived. merged dev, can deleted. periodically merge dev main small release updates. releases appear GitHub releases page.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/Contributing.html","id":"continuous-integration","dir":"Articles","previous_headings":"","what":"Continuous integration","title":"Contributing","text":"use GitHub Actions continuous integration platform run workflows. workflows use r-lib/actions R packages. run three types workflows. R CMD check runs pull request [main, dev] branches. Test coverage runs pull requests [main, dev] uses codecov.io integration checking test coverage. Finally, pkgdown runs pushes main, occur dev merged main periodically. Please note sometimes hard diagnose bugs can due date workflows. find strange unusual bug coming workflow, something consider checking.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/Contributing.html","id":"pull-requests","dir":"Articles","previous_headings":"","what":"Pull Requests","title":"Contributing","text":"making pull request, please use dev base branch. adding new feature (.e. pull feat/* branch), please ensure added minimal tests using testthat functionality feature can tested.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MOI_human.html","id":"simulation","dir":"Articles","previous_headings":"","what":"Simulation","title":"Queueing model for human superinfection","text":"Let’s check recover approximately correct distribution MOI. First set run simulation 1000 days. use make_MicroMoB() set base model object setup_humans_MOI() chosen parameters set multiplicity infection human model. parameter values expect mean MOI 5. see simulation converges equilibrium distribution time. Now can plot compartment sizes.  Another check Poisson-ness MOI distribution plot compartment sizes last time point. theoretical distribution plotted blue line.","code":"h <- 0.025 r <- 1/200 b <- 0.55  EIR <- -log(1 - h) / b  n <- 1 tmax <- 1e3 MOI_init <- matrix(data = c(1e5, rep(0, 1e2)), nrow = 101, ncol = n)  mod <- make_MicroMoB(tmax = tmax, p = 1) setup_humans_MOI(model = mod, stochastic = TRUE, theta = matrix(1, nrow = n, ncol = 1), H = colSums(MOI_init), MOI = MOI_init, r = r, b = b)  human_out <- data.table::CJ(day = 1:tmax, MOI = 0:(nrow(MOI_init)-1), value = NaN) data.table::setkey(human_out, day)  while (get_tnow(mod) <= mod$global$tmax) {   mod$human$EIR <- EIR   step_humans(model = mod)   human_out[day==get_tnow(mod), value := as.vector(mod$human$MOI)]   mod$global$tnow <- mod$global$tnow + 1L } weighted.mean(x = 0:100, w = human_out[day == tmax, value]) #> [1] 5.03939 ggplot(data = human_out) +   geom_line(aes(x = day, y = value, group = MOI, color = MOI)) human_final <- human_out[day == tmax, ] human_final[, 'theoretical' := dpois(x = MOI, lambda = h/r)] human_final[, 'empirical' := value / sum(value)]  ggplot(human_final, aes(MOI, empirical)) +     geom_bar(stat = 'identity') +     geom_line(aes(x = MOI, y = theoretical), color = \"blue\")"},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"Micro-MoB software package implements framework building mathematical models mosquito-borne pathogen transmission (MBPT). framework flexible enough incorporate vastly different models time places constraints upon parts framework interact software become obfuscatingly complex time new feature must added. define terms used talk Micro-MoB : components: irreducible “parts” MBPT models, must implemented model built Micro-MoB, even trivial model (e.g. constant value external forcing term). components adult mosquitoes, immature (aquatic) mosquitoes, resident (modeled) humans, non-resident visitors, blood hosts (e.g. livestock). Components can arbitrarily complex internal structure, models framework insist components given definition (even trivial, example constant 0). interface: component defines interface, components invariants (functions) can use query information . interface defines component expected compute expose rest system. model: specific instantiation component, necessarily fulfills component’s interface. SIS (Susceptible-Infectious-Susceptible) model human dynamics model human component, example. composition pattern: specific set components interact Micro-MoB. invariant component: computation generic across specific set models uses generic interface query state compute values. bloodmeal algorithm example, code contract modeller meaning model fulfilling component interface fills able interact rest framework, existing set models. described vignette(\"bloodmeal\").","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"software-design","dir":"Articles","previous_headings":"Introduction","what":"Software design","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"accomplish component-interface design R, use S3 object system. component named element model object (environment). interface defines set generic functions dispatch specific class object taking place component.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"dynamics","dir":"Articles","previous_headings":"Introduction","what":"Dynamics","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"simplified schematic relationships components (.e. model’s dynamics) Micro-MoB shown .  aquatic (immature) mosquito component \\(L\\) blue. time step, takes eggs laid ovipositing adult mosquitoes \\(G\\), updates state, producing newly emerging adults \\(\\Lambda\\). emerging mosquitoes added adult mosquito component (green). adult component, \\(M\\) represents total mosquito density, \\(Y\\) \\(Z\\) infected infectious mosquito populations, respectively. Uninfected mosquitoes become infected biting infectious hosts, blood feeding infected probability \\(\\kappa\\), computed bloodmeal (red). Infectious mosquitoes take bites human hosts, resulting human per-capita rate infection \\(EIR\\), computed bloodmeal, changes prevalence disease, \\(X\\). overall human component (yellow) dynamics acting \\(H\\).","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"components","dir":"Articles","previous_headings":"","what":"Components","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"component, interface defined file, example, R/humans_interface.R shows user methods must defined human model. specific implementation component model, files replace _interface model name implement model (e.g. R/humans_SIS.R implements SIS model). list components require interfaces specific models implement .","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"mosquitoes","dir":"Articles","previous_headings":"Components","what":"Mosquitoes","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"mosquito component responsible dynamics update adult mosquito populations. interface defined R/mosquito_interface.R, interface methods required implemented can found .","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"aquatic","dir":"Articles","previous_headings":"Components","what":"Aquatic","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"aquatic component responsible dynamics update immature (aquatic stage) mosquito populations. interface defined R/aquatic_interface.R, interface methods required implemented can found .","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"humans","dir":"Articles","previous_headings":"Components","what":"Humans","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"human component updates human populations. interface defined R/humans_interface.R, interface methods required implemented can found .","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"visitor","dir":"Articles","previous_headings":"Components","what":"Visitor","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"human component updates human populations outside resident population geographic area simulated. interface defined R/visitor_interface.R, interface methods required implemented can found .","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"other-blood-hosts","dir":"Articles","previous_headings":"Components","what":"Other blood hosts","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"(alternative) blood host component responsible blood hosts mosquitoes (livestock, dogs, etc). interface defined R/other_interface.R, interface methods required implemented can found .","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/MicroMoB.html","id":"dynamics-between-components","dir":"Articles","previous_headings":"","what":"Dynamics between components","title":"Micro-MoB (Microsimulation for mosquito-borne pathogens)","text":"Now ’ve seen components know find interfaces, can present dynamics , annotated information telling us exactly methods used pass information components. example, see green arrow sending eggs, \\(G\\), adult mosquitoes aquatic mosquitoes component. Within aquatic component (blue oval) see green method, compute_oviposit, meaning aquatic component’s state update method can use interface method get number eggs laid time step. Please note include visitor blood host components diagram, supplied external forcing (constants) bloodmeal carry state.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/RM_mosquito.html","id":"deterministic-model","dir":"Articles","previous_headings":"","what":"Deterministic model","title":"Ross-Macdonald mosquito model","text":"deterministic model following form: \\[\\begin{equation} Y_{0} = \\kappa_{t} (M_{t} - Y_{t})  \\\\ M_{t+1} = (pM_{t}) \\cdot \\psi +\\lambda_{t} \\\\ Y_{t+1} = p(Y_{t} + Y_{0}) \\cdot \\psi \\\\ Z_{t+1} = (pZ_{t} \\cdot \\psi) + (\\kappa_{t-EIP} (M_{t-EIP} - Y_{t-EIP}) p^{EIP} \\cdot \\psi^{EIP}) \\end{equation}\\] minor difference code, EIP forward-looking rather backwards. also note \\(p\\) allowed time-varying, even though represented constant. \\(\\kappa\\) passed mosquito component every day parameter, net infectiousness hosts mosquitoes (probability mosquito become infected biting random blood host). \\(\\lambda_{t}\\) number newly emerging adults day. calculated aquatic (immature) component passed mosquito component parameter.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/RM_mosquito.html","id":"stochastic-model","dir":"Articles","previous_headings":"","what":"Stochastic model","title":"Ross-Macdonald mosquito model","text":"stochastic model deterministic one survival probabilities used binomial draws (hypergeometric draws nested sampling), \\(\\psi\\) parameterizes multinomial draw destination places/patches mosquitoes leaving home place. stochastic model designed care appropriately tested make sure draw inconsistent event histories mosquitoes (e.g. sampling survival twice mosquitoes compartment).","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/RM_mosquito.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Ross-Macdonald mosquito model","text":"Let’s example. ’ll need set aquatic mosquito components. example run three years. make \\(\\lambda\\) vector giving emergence patch, day year, peaking middle year 100 mosquitoes emerging per day, per patch. also assume daily survival p sinusoidal, period 365 days. let EIP constant 5 days. also set \\(\\kappa = 0.05\\) day.","code":"tmax <- 365 * 3 p <- 3  lambda <- dnorm(x = 1:365, mean = 180, sd = 90) lambda <- lambda * (100/max(lambda)) lambda <- t(replicate(p, lambda))  psurv <- (sin((1:365)/365*2*pi) + 1.01)/2 * 0.9  EIP <- 5  f <- 0.3 q <- 1 psi <- matrix(   c(     0.9, 0.05, 0.05,     0.05, 0.9, 0.05,     0.05, 0.05, 0.9   ), nrow = 3, ncol = 3,    byrow = TRUE )   par(mar = c(5,5,2,5)) plot(lambda[1, ], type = \"l\", col = \"red\", xlab = \"Day\", ylab = \"Lambda (red)\") par(new = TRUE) plot(psurv, type = \"l\", axes = F, xlab = NA, ylab = NA, col = \"blue\") axis(side = 4) mtext(side = 4, line = 3, 'Survival Probability (blue)')"},{"path":"https://dd-harp.github.io/MicroMoB/articles/RM_mosquito.html","id":"deterministic-simulation","dir":"Articles","previous_headings":"Example","what":"Deterministic simulation","title":"Ross-Macdonald mosquito model","text":"Now can set models. Let’s first deterministic simulation. use make_MicroMoB() set base model object setup_mosquito_RM() setup RM mosquito model mosquito component. setup_aqua_trace() sets aquatic (immature) component simple trace (forced) model.","code":"M <- c(100, 100, 100) Y <- c(0, 0, 0) Z <- c(0, 0, 0)  mod <- make_MicroMoB(tmax = tmax, p = 3) setup_mosquito_RM(mod, stochastic = FALSE, f = f, q = q, eip = EIP, p = psurv, psi = psi, M = M, Y = Y, Z = Z) setup_aqua_trace(model = mod, lambda = lambda, stochastic = FALSE)  det_out <- data.table::CJ(day = 1:tmax, state = c('M', 'Y', 'Z'), patch = 1:3, value = NaN) det_out <- det_out[c('M', 'Y', 'Z'), on=\"state\"] data.table::setkey(det_out, day)  # run it while(get_tnow(mod) <= tmax) {      mod$mosquito$kappa <- rep(0.05, 3)   step_aqua(model = mod)   step_mosquitoes(model = mod)      det_out[day == get_tnow(mod) & state == 'M', value := mod$mosquito$M]   det_out[day == get_tnow(mod) & state == 'Y', value := mod$mosquito$Y]   det_out[day == get_tnow(mod) & state == 'Z', value := mod$mosquito$Z]      mod$global$tnow <- mod$global$tnow + 1L }  ggplot(det_out) +     geom_line(aes(x = day, y = value, color = state)) +     facet_grid(patch ~ .)"},{"path":"https://dd-harp.github.io/MicroMoB/articles/RM_mosquito.html","id":"stochastic-simulation","dir":"Articles","previous_headings":"Example","what":"Stochastic simulation","title":"Ross-Macdonald mosquito model","text":"Now run 10 stochastic simulations, using parameters.","code":"sto_out <- mclapply(X = 1:10, FUN = function(runid) {      mod <- make_MicroMoB(tmax = tmax, p = 3)   setup_mosquito_RM(mod, stochastic = TRUE, f = f, q = q, eip = EIP, p = psurv, psi = psi, M = M, Y = Y, Z = Z)   setup_aqua_trace(model = mod, lambda = lambda, stochastic = TRUE)      out <- data.table::CJ(day = 1:tmax, state = c('M', 'Y', 'Z'), patch = 1:3, value = NaN)   out <- out[c('M', 'Y', 'Z'), on=\"state\"]   data.table::setkey(out, day)      while(get_tnow(mod) <= tmax) {          mod$mosquito$kappa <- rep(0.05, 3)     step_aqua(model = mod)     step_mosquitoes(model = mod)          out[day == get_tnow(mod) & state == 'M', value := mod$mosquito$M]     out[day == get_tnow(mod) & state == 'Y', value := mod$mosquito$Y]     out[day == get_tnow(mod) & state == 'Z', value := mod$mosquito$Z]          mod$global$tnow <- mod$global$tnow + 1L   }      out[, 'run' := as.integer(runid)]   return(out) })  sto_out <- data.table::rbindlist(sto_out)  ggplot(sto_out) +     geom_line(aes(x = day, y = value, color = state, group = interaction(run, state)), alpha = 0.35) +     facet_grid(patch ~ .)"},{"path":"https://dd-harp.github.io/MicroMoB/articles/RM_transmission.html","id":"endemic-equilibrium-solution","dir":"Articles","previous_headings":"","what":"Endemic equilibrium solution","title":"Ross-Macdonald transmission model","text":"First write closest approximating ODE model derive endemic equilibrium check discrete time models approximately correct. Let human component described : \\[\\begin{equation} \\dot{S} = -b fqZ (1/N) S + rI \\\\ \\dot{} = b fqZ (1/N) S - rI \\end{equation}\\] , \\(fqZ\\) EIR, \\(N\\) total human population size. know values \\(S\\) \\(\\) can solve density infectious mosquitoes required give values endemic equilibrium: \\[\\begin{equation}   Z = \\frac{rIN}{bfqS} \\end{equation}\\] Now let us look system ODEs describing mosquitoes. Actually delay differential equations (DDE) incorporate delay infection infectiousness: \\[\\begin{equation}   \\dot{M} = \\lambda - gM \\\\   \\dot{Y} = fq\\kappa (M-Y) - gY \\\\   \\dot{Z} = fq\\kappa_{t-EIP} (M_{t-EIP} - Y_{t-EIP}) e^{-gEIP} - gZ \\end{equation}\\] interested equilibrium solutions, derivatives zero state variables time, can ignore delays: \\[\\begin{equation}   0 = \\lambda - gM \\\\   0 = fq\\kappa (M-Y) - gY \\\\   0 = fq\\kappa (M - Y) e^{-gEIP} - gZ \\end{equation}\\] Plug solution \\(Z\\) last equation get expression \\(M-Y\\) terms known quantities: \\[\\begin{equation} M-Y = \\frac{gZ}{fq\\kappa e^{-gEIP}} \\end{equation}\\] Now plug \\(M-Y\\) second equation get expression \\(Y\\), simplification get: \\[\\begin{equation}   Y = \\frac{Z}{e^{-gEIP}} \\end{equation}\\] get \\(M\\), add \\((M-Y) + Y\\) simplify get: \\[\\begin{equation} M = \\frac{Z(g + fq\\kappa)}{fq\\kappa e^{-gEIP}} \\end{equation}\\] Finally plug first equation solve \\(\\lambda\\): \\[\\begin{equation}   \\lambda = g \\left( \\frac{Z(g + fq\\kappa)}{fq\\kappa e^{-gEIP}} \\right) \\end{equation}\\] can set model parameters calculate numeric solutions values. Note actual equilibrium calculations use code different factor \\(p\\) terms \\(M\\) events ordered discrete time model, use \\(p^{EIP}\\) instead \\(e^{-gEIP}\\).","code":"# mosquito parameters f <- 0.3 q <- 1 eip <- 14  lifespan <- 20 g <- 1/lifespan p <- 1- g  # human parameters b <- 0.55 c <- 0.15 r <- 1/200  S <- 1e3 I <- 300 N <- S + I  # transmission parameters kappa <- (I/N)*c  # equilibrium solutions Z <- (r*I*N) / (b*f*q*S) Y <- Z / (p^eip) M <- (Z*(g + (f*q*p*kappa))) / (f*q*p*kappa*(p^eip)) lambda <- g*M"},{"path":"https://dd-harp.github.io/MicroMoB/articles/RM_transmission.html","id":"micromob-simulation","dir":"Articles","previous_headings":"","what":"MicroMoB simulation","title":"Ross-Macdonald transmission model","text":"Now let’s set simulation single patch single human stratum. first run deterministic simulation. first thing need create base model object using make_MicroMoB() initialize components specific models, . setup_humans_SIS() sets human component use SIS model infection. use setup_alternative_trace() setup_visitor_trace() set blood hosts visitor components simple model, use compute_bloodmeal_simple() compute \\(\\kappa\\) \\(EIR\\) instead complex compute_bloodmeal(). setup_mosquito_RM() sets adult mosquito component using Ross-Macdonald model, setup_aqua_trace() sets aquatic mosquito component using trace. Now can make matrices store output run model. Note call compute_bloodmeal() updating functions called. crucial properly updating models Micro-MoB. Now draw 10 trajectories stochastic simulation, plot output. plot cloud stochastic trajectories faint lines deterministic solution solid lines.","code":"patches <- 1 nstrata <- 1 tmax <- 365 * 2 theta <- diag(nstrata) psi <- diag(patches) mod <- make_MicroMoB(tmax = tmax, p = patches) setup_humans_SIS(mod, stochastic = FALSE, theta = theta, H = N, X = I, b = b, c = c, r = r) setup_aqua_trace(mod, stochastic = FALSE, lambda = lambda) setup_mosquito_RM(mod, stochastic = FALSE, f = f, q = q, eip = eip, p = p, psi = psi, M = M, Y = Y, Z = Z) mosy_out <- data.table::CJ(day = 1:tmax, state = c('M', 'Y', 'Z'), value = NaN, species = \"mosquito\") mosy_out <- mosy_out[c('M', 'Y', 'Z'), on=\"state\"] data.table::setkey(mosy_out, day)  human_out <- data.table::CJ(day = 1:tmax, state = c('S', 'I'), value = NaN, species = \"human\") human_out <- human_out[c('S', 'I'), on=\"state\"] data.table::setkey(human_out, day)  while (get_tnow(mod) <= tmax) {      compute_bloodmeal_simple(model = mod)   step_aqua(model = mod)   step_mosquitoes(model = mod)   step_humans(model = mod)      mosy_out[day == get_tnow(mod) & state == 'M', value := mod$mosquito$M]   mosy_out[day == get_tnow(mod) & state == 'Y', value := mod$mosquito$Y]   mosy_out[day == get_tnow(mod) & state == 'Z', value := mod$mosquito$Z]      human_out[day == get_tnow(mod) & state == 'S', value := mod$human$H - mod$human$X]   human_out[day == get_tnow(mod) & state == 'I', value := mod$human$X]    mod$global$tnow <- mod$global$tnow + 1L }  det_out <- rbind(mosy_out, human_out) sto_out <- mclapply(X = 1:10, FUN = function(runid) {      mod <- make_MicroMoB(tmax = tmax, p = patches)   setup_humans_SIS(mod, stochastic = TRUE, theta = theta, H = N, X = I, b = b, c = c, r = r)   setup_aqua_trace(mod, stochastic = TRUE, lambda = lambda)   setup_mosquito_RM(mod, stochastic = TRUE, f = f, q = q, eip = eip, p = p, psi = psi, M = M, Y = Y, Z = Z)      mosy_out <- data.table::CJ(day = 1:tmax, state = c('M', 'Y', 'Z'), value = NaN, species = \"mosquito\")   mosy_out <- mosy_out[c('M', 'Y', 'Z'), on=\"state\"]   data.table::setkey(mosy_out, day)      human_out <- data.table::CJ(day = 1:tmax, state = c('S', 'I'), value = NaN, species = \"human\")   human_out <- human_out[c('S', 'I'), on=\"state\"]   data.table::setkey(human_out, day)        while (get_tnow(mod) <= tmax) {          compute_bloodmeal_simple(model = mod)     step_aqua(model = mod)     step_mosquitoes(model = mod)     step_humans(model = mod)          mosy_out[day == get_tnow(mod) & state == 'M', value := mod$mosquito$M]     mosy_out[day == get_tnow(mod) & state == 'Y', value := mod$mosquito$Y]     mosy_out[day == get_tnow(mod) & state == 'Z', value := mod$mosquito$Z]          human_out[day == get_tnow(mod) & state == 'S', value := mod$human$H - mod$human$X]     human_out[day == get_tnow(mod) & state == 'I', value := mod$human$X]        mod$global$tnow <- mod$global$tnow + 1L   }      out <- rbind(mosy_out, human_out)   out[, \"run\" := as.integer(runid)]      return(out) })  sto_out <- data.table::rbindlist(sto_out)  ggplot(sto_out) +     geom_line(aes(x = day, y = value, color = state, group = run), alpha = 0.3) +     geom_line(data = det_out, aes(x = day, y = value, color = state)) +     facet_wrap(species ~ state, scales = \"free\")"},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Blood feeding","text":"Blood feeding (adult female mosquito seeks feeds blood host) crucial invariant Micro-MoB, models mosquito-borne pathogen transmission (MBPT) generally. Blood feeding algorithm uses information provided interface component compute values give distribution bites mosquitoes onto hosts, rate mosquitoes feed. blood feeding function (compute_bloodmeal()) R/bloodmeal.R.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"schematic","dir":"Articles","previous_headings":"","what":"Schematic","title":"Blood feeding","text":"schematic describing visually quantities generated blood meal algorithm. Different colors refer different components: green indicates values human component, blue indicates values adult mosquito component, yellow indicates values blood hosts visitor components. Values computed blood meal directly involved transmission red, values directly relevant transmission grey.  bloodmeal function updates several values within specific components. : \\(\\kappa\\): vector length p, giving net infectiousness hosts mosquitoes patch (adult mosquito component). \\(EIR\\): vector length n, giving entomological inoculation rate hosts strata (human component). \\(f\\): vector length p, giving blood feeding rate mosquitoes patch (adult mosquito component). \\(q\\): vector length p, giving proportion blood meals taken human hosts mosquitoes patch (adult mosquito component). values computed, component’s update (step) function can use update infection population. four values crucial metrics describe mosquitoes feed upon hosts, pathogens transferred infectious hosts susceptible mosquitoes, vice versa. reason call bloodfeeding invariant component, meaning full MBPT model need simulate process.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"human-component","dir":"Articles","previous_headings":"","what":"Human component","title":"Blood feeding","text":"Using generic interface human component, following values calculated used compute biting transmission. H: compute_H, gives total population strata x: compute_x, gives net infectiousness humans strata wf: compute_wf, gives biting weights strata Psi: compute_Psi, gives time risk matrix W: gives weighted person time risk spent patch; please note W calculated values (rather dispatching method)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"mosquito-component","dir":"Articles","previous_headings":"","what":"Mosquito component","title":"Blood feeding","text":"Likewise, following values required mosquitoes. f: compute_f, gives per-capita blood feeding rate patch q: compute_q, gives human blood feeding proportion patch Z: compute_Z, gives infectious mosquito density patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"other-components","dir":"Articles","previous_headings":"","what":"Other components","title":"Blood feeding","text":"also need compute: Wd: compute_Wd, biting availability visitors patch O: compute_O, biting availability blood hosts patch xd: compute_xd, net infectiousness visitors patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"biting-distribution-matrix-beta","dir":"Articles","previous_headings":"","what":"Biting distribution matrix (\\(\\beta\\))","title":"Blood feeding","text":"\\(\\beta\\), biting distribution matrix, n p matrix describes bites mosquitoes patches get distributed human population strata. multiplied right vector \\(fq \\upsilon Z\\) gives total number bites humans taken mosquitoes patch, result length n vector giving per-capita \\(EIR\\). \\[\\begin{equation} \\beta_{n\\times p} = \\mbox{diag}(w_{f}) \\cdot \\Psi \\cdot \\mbox{diag}(1/W) \\\\ \\end{equation}\\]","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"entomological-inoculation-rate-eir","dir":"Articles","previous_headings":"","what":"Entomological inoculation rate (\\(EIR\\))","title":"Blood feeding","text":"entomological inoculation rate directly proportional force infection humans \\(h = EIR \\cdot b\\), \\(b\\) transmission efficiency, probability bite infectious mosquito successfully causes infection human host. simply computed : \\[\\begin{equation} EIR_{n\\times 1} = \\beta \\cdot fq\\upsilon Z \\end{equation}\\]","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"net-infectiousness-of-the-human-population-kappa","dir":"Articles","previous_headings":"","what":"Net infectiousness of the human population (\\(\\kappa\\))","title":"Blood feeding","text":"net infectiousness humans probability mosquito become infected biting random human host. ’s directly proportional force infection mosquitoes, \\(\\kappa fq\\). calculated passed mosquitoes, particular mosquito model can use update state time step. \\[\\begin{equation} \\kappa_{p\\times 1} = \\upsilon \\cdot (\\beta^{\\top} \\cdot xH) + (1 - \\upsilon) x_{\\delta} \\end{equation}\\]","code":""},{"path":"https://dd-harp.github.io/MicroMoB/articles/bloodmeal.html","id":"directed-wiring-diagram","dir":"Articles","previous_headings":"","what":"Directed wiring diagram","title":"Blood feeding","text":"Another way view bloodmeal computation directed wiring diagram (DWD). DWD two types “boxes”, rectangles circles. Rectangles elements model state, similar machines automata theory. Circles represent functions internal state, may take number inputs produce output. Circles inside rectangle represent functions “belong” rectangle. Putting back terms Micro-MoB, rectangles components circles either invariant functions (live outside box), methods dispatch depending model fills component (live inside box).","code":""},{"path":"https://dd-harp.github.io/MicroMoB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sean L. Wu. Author, maintainer. David L. Smith. Author. Sophie Libkind. Contributor.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu S, Smith D (2023). MicroMoB: Discrete Time Simulation Mosquito-Borne Pathogen Transmission. https://dd-harp.github.io/MicroMoB/, https://github.com/dd-harp/MicroMoB.","code":"@Manual{,   title = {MicroMoB: Discrete Time Simulation of Mosquito-Borne Pathogen Transmission},   author = {Sean L. Wu and David L. Smith},   year = {2023},   note = {https://dd-harp.github.io/MicroMoB/, https://github.com/dd-harp/MicroMoB}, }"},{"path":[]},{"path":"https://dd-harp.github.io/MicroMoB/index.html","id":"what-is-micro-mob","dir":"","previous_headings":"","what":"What is Micro-MoB?","title":"Discrete Time Simulation of Mosquito-Borne Pathogen Transmission","text":"Micro-MoB made simplify task model building mosquito-borne pathogen transmission (MBPT) systems. stands “microsimulation mosquito-borne pathogens”. modular framework build discrete time MBPT models. uses R’s S3 object system define set components interfaces can filled specific model implements interface. parts, along certain invariants can put together define full simulation model. Definitions terms can found documentation. hope proves useful. Please visit website learn .","code":""},{"path":"https://dd-harp.github.io/MicroMoB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Discrete Time Simulation of Mosquito-Borne Pathogen Transmission","text":"Alternatively can install Micro-MoB directly CRAN, aware CRAN version may recent version package:","code":"remotes::install_github('dd-harp/MicroMoB') install.packages('MicroMoB')"},{"path":"https://dd-harp.github.io/MicroMoB/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Discrete Time Simulation of Mosquito-Borne Pathogen Transmission","text":"start learning software design, problems designed solve, build new models Micro-MoB, please read vignette(\"MicroMoB\"). Next, vignette(\"bloodmeal\") describes bloodmeal algorithm computes distribution bites using component’s interface, allowing different models linked consistent framework. also articles describing well-known models specific components MBPT models implemented Micro-MoB: vignette(\"RM_mosquito\"): read implementation flexible Ross-Macdonald model adult mosquito dynamics. vignette(\"MOI_human\"): read implementation (M/M/∞) queuing model superinfection humans. vignette(\"BH_aqua\"): read simple non-linear model aquatic (immature) stage mosquito dynamics based well known Beverton-Holt model ecology. vignette(\"BQ_mosquito\"): read behavioral state model adult mosquito dynamics. vignette(\"RM_transmission\"): read put together models fulfilling component run simple Ross-Macdonald style model pathogen transmission human hosts mosquito vectors. article vignette(\"Advanced\") contains information extend Micro-MoB linking new package, write new models interact rest system. also contains information use Plumber web API supported models Micro-MoB.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Discrete Time Simulation of Mosquito-Borne Pathogen Transmission","text":"Thank interest Micro-MoB! bug report, please open issue GitHub. like open pull request questions, please see guide contributing project vignette(\"Contributing\").","code":""},{"path":"https://dd-harp.github.io/MicroMoB/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Discrete Time Simulation of Mosquito-Borne Pathogen Transmission","text":"Please note Micro-MoB project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/MicroMoB.html","id":null,"dir":"Reference","previous_headings":"","what":"MicroMoB: Microsimulation for mosquito-borne pathogens — MicroMoB","title":"MicroMoB: Microsimulation for mosquito-borne pathogens — MicroMoB","text":"Discrete time simulation mosquito-borne pathogen transmission","code":""},{"path":[]},{"path":"https://dd-harp.github.io/MicroMoB/reference/MicroMoB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MicroMoB: Microsimulation for mosquito-borne pathogens — MicroMoB","text":"Maintainer: Sean L. Wu slwood89@gmail.com (ORCID) Authors: David L. Smith smitdave@uw.edu (ORCID) contributors: Sophie Libkind [contributor]","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/api_config_global.html","id":null,"dir":"Reference","previous_headings":"","what":"Read global configuration options — api_config_global","title":"Read global configuration options — api_config_global","text":"Read global configuration options","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/api_config_global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read global configuration options — api_config_global","text":"","code":"api_config_global(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/api_config_global.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read global configuration options — api_config_global","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/approx_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two numeric values are approximately equal — approx_equal","title":"Check if two numeric values are approximately equal — approx_equal","text":"Check two numeric values approximately equal","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/approx_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two numeric values are approximately equal — approx_equal","text":"","code":"approx_equal(a, b, tol = sqrt(.Machine$double.eps))"},{"path":"https://dd-harp.github.io/MicroMoB/reference/approx_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two numeric values are approximately equal — approx_equal","text":"numeric object b numeric object tol numeric tolerance","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/approx_equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two numeric values are approximately equal — approx_equal","text":"logical value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.MOI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human population strata sizes for MOI model (\\(H\\)) — compute_H.MOI","title":"Compute human population strata sizes for MOI model (\\(H\\)) — compute_H.MOI","text":"Compute human population strata sizes MOI model (\\(H\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.MOI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human population strata sizes for MOI model (\\(H\\)) — compute_H.MOI","text":"","code":"# S3 method for MOI compute_H(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.MOI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human population strata sizes for MOI model (\\(H\\)) — compute_H.MOI","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.MOI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human population strata sizes for MOI model (\\(H\\)) — compute_H.MOI","text":"vector length n giving size human population stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human population strata sizes for SIP model (\\(H\\)) — compute_H.SIP","title":"Compute human population strata sizes for SIP model (\\(H\\)) — compute_H.SIP","text":"Compute human population strata sizes SIP model (\\(H\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human population strata sizes for SIP model (\\(H\\)) — compute_H.SIP","text":"","code":"# S3 method for SIP compute_H(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human population strata sizes for SIP model (\\(H\\)) — compute_H.SIP","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human population strata sizes for SIP model (\\(H\\)) — compute_H.SIP","text":"vector length n giving size human population stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human population strata sizes for SIR model (\\(H\\)) — compute_H.SIR","title":"Compute human population strata sizes for SIR model (\\(H\\)) — compute_H.SIR","text":"Compute human population strata sizes SIR model (\\(H\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human population strata sizes for SIR model (\\(H\\)) — compute_H.SIR","text":"","code":"# S3 method for SIR compute_H(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human population strata sizes for SIR model (\\(H\\)) — compute_H.SIR","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human population strata sizes for SIR model (\\(H\\)) — compute_H.SIR","text":"vector length n giving size human population stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human population strata sizes for SIS model (\\(H\\)) — compute_H.SIS","title":"Compute human population strata sizes for SIS model (\\(H\\)) — compute_H.SIS","text":"Compute human population strata sizes SIS model (\\(H\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human population strata sizes for SIS model (\\(H\\)) — compute_H.SIS","text":"","code":"# S3 method for SIS compute_H(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human population strata sizes for SIS model (\\(H\\)) — compute_H.SIS","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human population strata sizes for SIS model (\\(H\\)) — compute_H.SIS","text":"vector length n giving size human population stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human population strata sizes (\\(H\\)) — compute_H","title":"Compute human population strata sizes (\\(H\\)) — compute_H","text":"method dispatches type model$human.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human population strata sizes (\\(H\\)) — compute_H","text":"","code":"compute_H(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human population strata sizes (\\(H\\)) — compute_H","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_H.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human population strata sizes (\\(H\\)) — compute_H","text":"vector length n giving size human population stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_O.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute available alternative blood hosts (\\(O\\)) — compute_O","title":"Compute available alternative blood hosts (\\(O\\)) — compute_O","text":"method dispatches type model$alternative.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_O.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute available alternative blood hosts (\\(O\\)) — compute_O","text":"","code":"compute_O(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_O.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute available alternative blood hosts (\\(O\\)) — compute_O","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_O.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute available alternative blood hosts (\\(O\\)) — compute_O","text":"vector length p giving biting availability blood hosts patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_O.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute available alternative blood hosts for trace model (\\(O\\)) — compute_O.trace","title":"Compute available alternative blood hosts for trace model (\\(O\\)) — compute_O.trace","text":"Compute available alternative blood hosts trace model (\\(O\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_O.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute available alternative blood hosts for trace model (\\(O\\)) — compute_O.trace","text":"","code":"# S3 method for trace compute_O(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_O.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute available alternative blood hosts for trace model (\\(O\\)) — compute_O.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_O.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute available alternative blood hosts for trace model (\\(O\\)) — compute_O.trace","text":"vector length p giving biting availability blood hosts patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.MOI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute time at risk matrix for MOI model (\\(\\Psi\\)) — compute_Psi.MOI","title":"Compute time at risk matrix for MOI model (\\(\\Psi\\)) — compute_Psi.MOI","text":"Compute time risk matrix MOI model (\\(\\Psi\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.MOI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute time at risk matrix for MOI model (\\(\\Psi\\)) — compute_Psi.MOI","text":"","code":"# S3 method for MOI compute_Psi(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.MOI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute time at risk matrix for MOI model (\\(\\Psi\\)) — compute_Psi.MOI","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.MOI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute time at risk matrix for MOI model (\\(\\Psi\\)) — compute_Psi.MOI","text":"matrix n rows p columns, time risk matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute time at risk matrix for SIP model (\\(\\Psi\\)) — compute_Psi.SIP","title":"Compute time at risk matrix for SIP model (\\(\\Psi\\)) — compute_Psi.SIP","text":"Compute time risk matrix SIP model (\\(\\Psi\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute time at risk matrix for SIP model (\\(\\Psi\\)) — compute_Psi.SIP","text":"","code":"# S3 method for SIP compute_Psi(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute time at risk matrix for SIP model (\\(\\Psi\\)) — compute_Psi.SIP","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute time at risk matrix for SIP model (\\(\\Psi\\)) — compute_Psi.SIP","text":"matrix n rows p columns, time risk matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute time at risk matrix for SIR model (\\(\\Psi\\)) — compute_Psi.SIR","title":"Compute time at risk matrix for SIR model (\\(\\Psi\\)) — compute_Psi.SIR","text":"Compute time risk matrix SIR model (\\(\\Psi\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute time at risk matrix for SIR model (\\(\\Psi\\)) — compute_Psi.SIR","text":"","code":"# S3 method for SIR compute_Psi(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute time at risk matrix for SIR model (\\(\\Psi\\)) — compute_Psi.SIR","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute time at risk matrix for SIR model (\\(\\Psi\\)) — compute_Psi.SIR","text":"matrix n rows p columns, time risk matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute time at risk matrix for SIS model (\\(\\Psi\\)) — compute_Psi.SIS","title":"Compute time at risk matrix for SIS model (\\(\\Psi\\)) — compute_Psi.SIS","text":"Compute time risk matrix SIS model (\\(\\Psi\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute time at risk matrix for SIS model (\\(\\Psi\\)) — compute_Psi.SIS","text":"","code":"# S3 method for SIS compute_Psi(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute time at risk matrix for SIS model (\\(\\Psi\\)) — compute_Psi.SIS","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute time at risk matrix for SIS model (\\(\\Psi\\)) — compute_Psi.SIS","text":"matrix n rows p columns, time risk matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute time at risk matrix (\\(\\Psi\\)) — compute_Psi","title":"Compute time at risk matrix (\\(\\Psi\\)) — compute_Psi","text":"time risk matrix \\(\\Psi = \\Theta \\xi\\) method dispatches type model$human.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute time at risk matrix (\\(\\Psi\\)) — compute_Psi","text":"","code":"compute_Psi(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute time at risk matrix (\\(\\Psi\\)) — compute_Psi","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Psi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute time at risk matrix (\\(\\Psi\\)) — compute_Psi","text":"matrix n rows p columns, time risk matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Wd.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute available visitors (\\(W_{\\delta}\\)) — compute_Wd","title":"Compute available visitors (\\(W_{\\delta}\\)) — compute_Wd","text":"method dispatches type model$visitor.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Wd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute available visitors (\\(W_{\\delta}\\)) — compute_Wd","text":"","code":"compute_Wd(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Wd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute available visitors (\\(W_{\\delta}\\)) — compute_Wd","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Wd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute available visitors (\\(W_{\\delta}\\)) — compute_Wd","text":"vector length p giving biting availability visitors patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Wd.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute available visitors for trace model (\\(W_{\\delta}\\)) — compute_Wd.trace","title":"Compute available visitors for trace model (\\(W_{\\delta}\\)) — compute_Wd.trace","text":"Compute available visitors trace model (\\(W_{\\delta}\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Wd.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute available visitors for trace model (\\(W_{\\delta}\\)) — compute_Wd.trace","text":"","code":"# S3 method for trace compute_Wd(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Wd.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute available visitors for trace model (\\(W_{\\delta}\\)) — compute_Wd.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Wd.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute available visitors for trace model (\\(W_{\\delta}\\)) — compute_Wd.trace","text":"vector length p giving biting availability visitors patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.BQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of infective mosquitoes for BQ model (\\(Z\\)) — compute_Z.BQ","title":"Compute density of infective mosquitoes for BQ model (\\(Z\\)) — compute_Z.BQ","text":"method returns Z.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.BQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of infective mosquitoes for BQ model (\\(Z\\)) — compute_Z.BQ","text":"","code":"# S3 method for BQ compute_Z(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.BQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of infective mosquitoes for BQ model (\\(Z\\)) — compute_Z.BQ","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.BQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of infective mosquitoes for BQ model (\\(Z\\)) — compute_Z.BQ","text":"vector length p giving density infected infectious mosquitoes blood feeding haunt","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of infective mosquitoes for RM model (\\(Z\\)) — compute_Z.RM","title":"Compute density of infective mosquitoes for RM model (\\(Z\\)) — compute_Z.RM","text":"method returns Z.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of infective mosquitoes for RM model (\\(Z\\)) — compute_Z.RM","text":"","code":"# S3 method for RM compute_Z(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of infective mosquitoes for RM model (\\(Z\\)) — compute_Z.RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of infective mosquitoes for RM model (\\(Z\\)) — compute_Z.RM","text":"vector length p giving density infected infectious mosquitoes patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute density of infective mosquitoes (\\(Z\\)) — compute_Z","title":"Compute density of infective mosquitoes (\\(Z\\)) — compute_Z","text":"method dispatches type model$mosquito. \\(Z\\) also known \"sporozoite rate\" malariology.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute density of infective mosquitoes (\\(Z\\)) — compute_Z","text":"","code":"compute_Z(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute density of infective mosquitoes (\\(Z\\)) — compute_Z","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute density of infective mosquitoes (\\(Z\\)) — compute_Z","text":"vector length p giving density infected infectious mosquitoes patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute null density of infective mosquitoes (\\(Z\\)) — compute_Z.trace","title":"Compute null density of infective mosquitoes (\\(Z\\)) — compute_Z.trace","text":"Compute null density infective mosquitoes (\\(Z\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute null density of infective mosquitoes (\\(Z\\)) — compute_Z.trace","text":"","code":"# S3 method for trace compute_Z(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute null density of infective mosquitoes (\\(Z\\)) — compute_Z.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_Z.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute null density of infective mosquitoes (\\(Z\\)) — compute_Z.trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_bloodmeal.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bloodmeals taken by mosquitoes on hosts — compute_bloodmeal","title":"Compute bloodmeals taken by mosquitoes on hosts — compute_bloodmeal","text":"run prior step functions update components time step. computes various quantities related disease transmission species using generic interfaces (methods) provided component. updates EIR vector human component, kappa, net infectiousness hosts mosquito component.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_bloodmeal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bloodmeals taken by mosquitoes on hosts — compute_bloodmeal","text":"","code":"compute_bloodmeal(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_bloodmeal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bloodmeals taken by mosquitoes on hosts — compute_bloodmeal","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_bloodmeal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bloodmeals taken by mosquitoes on hosts — compute_bloodmeal","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_bloodmeal_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bloodmeals taken by mosquitoes on hosts in simple models — compute_bloodmeal_simple","title":"Compute bloodmeals taken by mosquitoes on hosts in simple models — compute_bloodmeal_simple","text":"difference compute_bloodmeal function include computations alternative blood hosts visitors suitable models include mosquitoes resident human populations.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_bloodmeal_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bloodmeals taken by mosquitoes on hosts in simple models — compute_bloodmeal_simple","text":"","code":"compute_bloodmeal_simple(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_bloodmeal_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bloodmeals taken by mosquitoes on hosts in simple models — compute_bloodmeal_simple","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_bloodmeal_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bloodmeals taken by mosquitoes on hosts in simple models — compute_bloodmeal_simple","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of newly emerging adults from Beverton-Holt dynamics — compute_emergents.BH","title":"Compute number of newly emerging adults from Beverton-Holt dynamics — compute_emergents.BH","text":"function dispatches second class attribute model$aqua stochastic deterministic behavior.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of newly emerging adults from Beverton-Holt dynamics — compute_emergents.BH","text":"","code":"# S3 method for BH compute_emergents(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of newly emerging adults from Beverton-Holt dynamics — compute_emergents.BH","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of newly emerging adults from Beverton-Holt dynamics — compute_emergents.BH","text":"vector length l giving number newly emerging adult patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of newly emerging adults (\\(\\lambda\\)) — compute_emergents","title":"Compute number of newly emerging adults (\\(\\lambda\\)) — compute_emergents","text":"method dispatches type model$aqua","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of newly emerging adults (\\(\\lambda\\)) — compute_emergents","text":"","code":"compute_emergents(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of newly emerging adults (\\(\\lambda\\)) — compute_emergents","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of newly emerging adults (\\(\\lambda\\)) — compute_emergents","text":"vector length p giving number newly emerging adult patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of newly emerging adults from forcing term — compute_emergents.trace","title":"Compute number of newly emerging adults from forcing term — compute_emergents.trace","text":"function dispatches second class attribute model$aqua stochastic deterministic behavior.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of newly emerging adults from forcing term — compute_emergents.trace","text":"","code":"# S3 method for trace compute_emergents(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of newly emerging adults from forcing term — compute_emergents.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of newly emerging adults from forcing term — compute_emergents.trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute number of newly emerging adults from forcing term — compute_emergents.trace","text":"see compute_emergents.trace_deterministic compute_emergents.trace_stochastic","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of newly emerging adults from forcing term (deterministic) — compute_emergents.trace_deterministic","title":"Compute number of newly emerging adults from forcing term (deterministic) — compute_emergents.trace_deterministic","text":"Return column lambda matrix day.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of newly emerging adults from forcing term (deterministic) — compute_emergents.trace_deterministic","text":"","code":"# S3 method for trace_deterministic compute_emergents(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of newly emerging adults from forcing term (deterministic) — compute_emergents.trace_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of newly emerging adults from forcing term (deterministic) — compute_emergents.trace_deterministic","text":"vector length l giving number newly emerging adult patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of newly emerging adults from forcing term (stochastic) — compute_emergents.trace_stochastic","title":"Compute number of newly emerging adults from forcing term (stochastic) — compute_emergents.trace_stochastic","text":"Draw Poisson distributed number emerging adults mean parameter column trace matrix day.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of newly emerging adults from forcing term (stochastic) — compute_emergents.trace_stochastic","text":"","code":"# S3 method for trace_stochastic compute_emergents(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of newly emerging adults from forcing term (stochastic) — compute_emergents.trace_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_emergents.trace_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of newly emerging adults from forcing term (stochastic) — compute_emergents.trace_stochastic","text":"vector length l giving number newly emerging adult patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.BQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mosquito feeding rate for BQ model (\\(f\\)) — compute_f.BQ","title":"Compute mosquito feeding rate for BQ model (\\(f\\)) — compute_f.BQ","text":"Blood feeding rates modeled Holling type 2 (rational) function blood host availability. $$f(B) = f_x \\frac{s_f B}{1+s_f B}$$ \\(f_x\\) maximum blood feeding rate \\(s_f\\) scaling parameter.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.BQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mosquito feeding rate for BQ model (\\(f\\)) — compute_f.BQ","text":"","code":"# S3 method for BQ compute_f(model, B)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.BQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mosquito feeding rate for BQ model (\\(f\\)) — compute_f.BQ","text":"model object make_MicroMoB B vector length p giving total blood host availability patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.BQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mosquito feeding rate for BQ model (\\(f\\)) — compute_f.BQ","text":"vector length p giving per-capita blood feeding rate mosquitoes blood feeding haunt","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mosquito feeding rate for RM model (\\(f\\)) — compute_f.RM","title":"Compute mosquito feeding rate for RM model (\\(f\\)) — compute_f.RM","text":"method simply returns f parameter mosquito object, RM model assumes constant blood feeding rate.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mosquito feeding rate for RM model (\\(f\\)) — compute_f.RM","text":"","code":"# S3 method for RM compute_f(model, B)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mosquito feeding rate for RM model (\\(f\\)) — compute_f.RM","text":"model object make_MicroMoB B vector length p giving total blood host availability patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mosquito feeding rate for RM model (\\(f\\)) — compute_f.RM","text":"vector length p giving per-capita blood feeding rate mosquitoes patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mosquito feeding rate (\\(f\\)) — compute_f","title":"Compute mosquito feeding rate (\\(f\\)) — compute_f","text":"method dispatches type model$mosquito","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mosquito feeding rate (\\(f\\)) — compute_f","text":"","code":"compute_f(model, B)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mosquito feeding rate (\\(f\\)) — compute_f","text":"model object make_MicroMoB B vector length p giving total blood host availability patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mosquito feeding rate (\\(f\\)) — compute_f","text":"vector length p giving per-capita blood feeding rate mosquitoes patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute null mosquito feeding rate (\\(f\\)) — compute_f.trace","title":"Compute null mosquito feeding rate (\\(f\\)) — compute_f.trace","text":"Compute null mosquito feeding rate (\\(f\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute null mosquito feeding rate (\\(f\\)) — compute_f.trace","text":"","code":"# S3 method for trace compute_f(model, B)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute null mosquito feeding rate (\\(f\\)) — compute_f.trace","text":"model object make_MicroMoB B vector length p giving total blood host availability patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_f.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute null mosquito feeding rate (\\(f\\)) — compute_f.trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of eggs laid from oviposition for each aquatic habitat for BQ model — compute_oviposit.BQ","title":"Compute number of eggs laid from oviposition for each aquatic habitat for BQ model — compute_oviposit.BQ","text":"method returns vector length l.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of eggs laid from oviposition for each aquatic habitat for BQ model — compute_oviposit.BQ","text":"","code":"# S3 method for BQ compute_oviposit(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of eggs laid from oviposition for each aquatic habitat for BQ model — compute_oviposit.BQ","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of eggs laid from oviposition for each aquatic habitat for BQ model — compute_oviposit.BQ","text":"vector length l giving total number eggs laid adult mosquitoes aquatic habitat","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute number of eggs laid from oviposition for each aquatic habitat for BQ model — compute_oviposit.BQ","text":"see compute_oviposit.BQ_deterministic compute_oviposit.BQ_stochastic","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.BQ_deterministic","title":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.BQ_deterministic","text":"Compute number eggs laid oviposition patch deterministic RM model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.BQ_deterministic","text":"","code":"# S3 method for BQ_deterministic compute_oviposit(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.BQ_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.BQ_deterministic","text":"vector length l giving total number eggs laid adult mosquitoes aquatic habitat","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.BQ_stochastic","title":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.BQ_stochastic","text":"Compute number eggs laid oviposition patch stochastic RM model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.BQ_stochastic","text":"","code":"# S3 method for BQ_stochastic compute_oviposit(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.BQ_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.BQ_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.BQ_stochastic","text":"vector length l giving total number eggs laid adult mosquitoes aquatic habitat","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of eggs laid from oviposition for each patch for RM model — compute_oviposit.RM","title":"Compute number of eggs laid from oviposition for each patch for RM model — compute_oviposit.RM","text":"method returns vector length p.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of eggs laid from oviposition for each patch for RM model — compute_oviposit.RM","text":"","code":"# S3 method for RM compute_oviposit(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of eggs laid from oviposition for each patch for RM model — compute_oviposit.RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of eggs laid from oviposition for each patch for RM model — compute_oviposit.RM","text":"vector length p giving total number eggs laid adult mosquitoes patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute number of eggs laid from oviposition for each patch for RM model — compute_oviposit.RM","text":"see compute_oviposit.RM_deterministic compute_oviposit.RM_stochastic","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.RM_deterministic","title":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.RM_deterministic","text":"Compute number eggs laid oviposition patch deterministic RM model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.RM_deterministic","text":"","code":"# S3 method for RM_deterministic compute_oviposit(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.RM_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of eggs laid from oviposition for each patch for deterministic RM model — compute_oviposit.RM_deterministic","text":"vector length p giving total number eggs laid adult mosquitoes patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.RM_stochastic","title":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.RM_stochastic","text":"Compute number eggs laid oviposition patch stochastic RM model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.RM_stochastic","text":"","code":"# S3 method for RM_stochastic compute_oviposit(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.RM_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.RM_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of eggs laid from oviposition for each patch for stochastic RM model — compute_oviposit.RM_stochastic","text":"vector length l giving total number eggs laid adult mosquitoes patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of eggs laid from oviposition for each patch — compute_oviposit","title":"Compute number of eggs laid from oviposition for each patch — compute_oviposit","text":"method dispatches type model$mosquito","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of eggs laid from oviposition for each patch — compute_oviposit","text":"","code":"compute_oviposit(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of eggs laid from oviposition for each patch — compute_oviposit","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of eggs laid from oviposition for each patch — compute_oviposit","text":"vector length l giving total number eggs laid adult mosquitoes aquatic habitat","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of eggs laid from oviposition for each patch for null model — compute_oviposit.trace","title":"Compute number of eggs laid from oviposition for each patch for null model — compute_oviposit.trace","text":"method dispatches type model$mosquito","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of eggs laid from oviposition for each patch for null model — compute_oviposit.trace","text":"","code":"# S3 method for trace compute_oviposit(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of eggs laid from oviposition for each patch for null model — compute_oviposit.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_oviposit.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of eggs laid from oviposition for each patch for null model — compute_oviposit.trace","text":"vector length p giving total number eggs laid adult mosquitoes patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.BQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human blood feeding fraction for BQ model (\\(q\\)) — compute_q.BQ","title":"Compute human blood feeding fraction for BQ model (\\(q\\)) — compute_q.BQ","text":"human blood feeding fraction simply proportion human hosts.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.BQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human blood feeding fraction for BQ model (\\(q\\)) — compute_q.BQ","text":"","code":"# S3 method for BQ compute_q(model, W, Wd, B)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.BQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human blood feeding fraction for BQ model (\\(q\\)) — compute_q.BQ","text":"model object make_MicroMoB W vector length p giving human availability patch (\\(W\\)) Wd vector length p giving visitor availability patch (\\(W_{\\delta}\\)) B vector length p giving total blood host availability patch (\\(B\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.BQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human blood feeding fraction for BQ model (\\(q\\)) — compute_q.BQ","text":"vector length p giving proportion bites taken human hosts blood feeding haunt","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human blood feeding fraction for RM model (\\(q\\)) — compute_q.RM","title":"Compute human blood feeding fraction for RM model (\\(q\\)) — compute_q.RM","text":"method simply returns q parameter mosquito object, RM model assumes constant fraction blood meals taken human hosts.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human blood feeding fraction for RM model (\\(q\\)) — compute_q.RM","text":"","code":"# S3 method for RM compute_q(model, W, Wd, B)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human blood feeding fraction for RM model (\\(q\\)) — compute_q.RM","text":"model object make_MicroMoB W vector length p giving human availability patch (\\(W\\)) Wd vector length p giving visitor availability patch (\\(W_{\\delta}\\)) B vector length p giving total blood host availability patch (\\(B\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human blood feeding fraction for RM model (\\(q\\)) — compute_q.RM","text":"vector length p giving proportion bites taken human hosts patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human blood feeding fraction (\\(q\\)) — compute_q","title":"Compute human blood feeding fraction (\\(q\\)) — compute_q","text":"method dispatches type model$mosquito","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human blood feeding fraction (\\(q\\)) — compute_q","text":"","code":"compute_q(model, W, Wd, B)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human blood feeding fraction (\\(q\\)) — compute_q","text":"model object make_MicroMoB W vector length p giving human availability patch (\\(W\\)) Wd vector length p giving visitor availability patch (\\(W_{\\delta}\\)) B vector length p giving total blood host availability patch (\\(B\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human blood feeding fraction (\\(q\\)) — compute_q","text":"vector length p giving proportion bites taken human hosts patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute null human blood feeding fraction (\\(q\\)) — compute_q.trace","title":"Compute null human blood feeding fraction (\\(q\\)) — compute_q.trace","text":"Compute null human blood feeding fraction (\\(q\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute null human blood feeding fraction (\\(q\\)) — compute_q.trace","text":"","code":"# S3 method for trace compute_q(model, W, Wd, B)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute null human blood feeding fraction (\\(q\\)) — compute_q.trace","text":"model object make_MicroMoB W vector length p giving human availability patch (\\(W\\)) Wd vector length p giving visitor availability patch (\\(W_{\\delta}\\)) B vector length p giving total blood host availability patch (\\(B\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_q.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute null human blood feeding fraction (\\(q\\)) — compute_q.trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.MOI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human biting weights for MOI model (\\(w_{f}\\)) — compute_wf.MOI","title":"Compute human biting weights for MOI model (\\(w_{f}\\)) — compute_wf.MOI","text":"Compute human biting weights MOI model (\\(w_{f}\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.MOI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human biting weights for MOI model (\\(w_{f}\\)) — compute_wf.MOI","text":"","code":"# S3 method for MOI compute_wf(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.MOI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human biting weights for MOI model (\\(w_{f}\\)) — compute_wf.MOI","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.MOI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human biting weights for MOI model (\\(w_{f}\\)) — compute_wf.MOI","text":"vector length n giving biting weights human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human biting weights for SIP model (\\(w_{f}\\)) — compute_wf.SIP","title":"Compute human biting weights for SIP model (\\(w_{f}\\)) — compute_wf.SIP","text":"Compute human biting weights SIP model (\\(w_{f}\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human biting weights for SIP model (\\(w_{f}\\)) — compute_wf.SIP","text":"","code":"# S3 method for SIP compute_wf(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human biting weights for SIP model (\\(w_{f}\\)) — compute_wf.SIP","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human biting weights for SIP model (\\(w_{f}\\)) — compute_wf.SIP","text":"vector length n giving biting weights human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human biting weights for SIR model (\\(w_{f}\\)) — compute_wf.SIR","title":"Compute human biting weights for SIR model (\\(w_{f}\\)) — compute_wf.SIR","text":"Compute human biting weights SIR model (\\(w_{f}\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human biting weights for SIR model (\\(w_{f}\\)) — compute_wf.SIR","text":"","code":"# S3 method for SIR compute_wf(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human biting weights for SIR model (\\(w_{f}\\)) — compute_wf.SIR","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human biting weights for SIR model (\\(w_{f}\\)) — compute_wf.SIR","text":"vector length n giving biting weights human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human biting weights for SIS model (\\(w_{f}\\)) — compute_wf.SIS","title":"Compute human biting weights for SIS model (\\(w_{f}\\)) — compute_wf.SIS","text":"Compute human biting weights SIS model (\\(w_{f}\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human biting weights for SIS model (\\(w_{f}\\)) — compute_wf.SIS","text":"","code":"# S3 method for SIS compute_wf(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human biting weights for SIS model (\\(w_{f}\\)) — compute_wf.SIS","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human biting weights for SIS model (\\(w_{f}\\)) — compute_wf.SIS","text":"vector length n giving biting weights human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute human biting weights (\\(w_{f}\\)) — compute_wf","title":"Compute human biting weights (\\(w_{f}\\)) — compute_wf","text":"method dispatches type model$human.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute human biting weights (\\(w_{f}\\)) — compute_wf","text":"","code":"compute_wf(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute human biting weights (\\(w_{f}\\)) — compute_wf","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_wf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute human biting weights (\\(w_{f}\\)) — compute_wf","text":"vector length n giving biting weights human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.MOI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute net infectiousness for MOI model (\\(x\\)) — compute_x.MOI","title":"Compute net infectiousness for MOI model (\\(x\\)) — compute_x.MOI","text":"simple MOI (queueing) model (M/M/inf), net infectiousness considered vary increasing MOI. calculated $$c \\cdot (1 - \\frac{X_{0}}{H})$$ \\(X_{0}\\) number uninfected persons (multiplicity infection zero).","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.MOI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute net infectiousness for MOI model (\\(x\\)) — compute_x.MOI","text":"","code":"# S3 method for MOI compute_x(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.MOI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute net infectiousness for MOI model (\\(x\\)) — compute_x.MOI","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.MOI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute net infectiousness for MOI model (\\(x\\)) — compute_x.MOI","text":"vector length n giving net infectiousness human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute net infectiousness for SIP model (\\(x\\)) — compute_x.SIP","title":"Compute net infectiousness for SIP model (\\(x\\)) — compute_x.SIP","text":"Compute net infectiousness SIP model (\\(x\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute net infectiousness for SIP model (\\(x\\)) — compute_x.SIP","text":"","code":"# S3 method for SIP compute_x(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute net infectiousness for SIP model (\\(x\\)) — compute_x.SIP","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute net infectiousness for SIP model (\\(x\\)) — compute_x.SIP","text":"vector length n giving net infectiousness human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute net infectiousness for SIR model (\\(x\\)) — compute_x.SIR","title":"Compute net infectiousness for SIR model (\\(x\\)) — compute_x.SIR","text":"Compute net infectiousness SIR model (\\(x\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute net infectiousness for SIR model (\\(x\\)) — compute_x.SIR","text":"","code":"# S3 method for SIR compute_x(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute net infectiousness for SIR model (\\(x\\)) — compute_x.SIR","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute net infectiousness for SIR model (\\(x\\)) — compute_x.SIR","text":"vector length n giving net infectiousness human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute net infectiousness for SIS model (\\(x\\)) — compute_x.SIS","title":"Compute net infectiousness for SIS model (\\(x\\)) — compute_x.SIS","text":"Compute net infectiousness SIS model (\\(x\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute net infectiousness for SIS model (\\(x\\)) — compute_x.SIS","text":"","code":"# S3 method for SIS compute_x(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute net infectiousness for SIS model (\\(x\\)) — compute_x.SIS","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute net infectiousness for SIS model (\\(x\\)) — compute_x.SIS","text":"vector length n giving net infectiousness human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute net infectiousness of humans (\\(x\\)) — compute_x","title":"Compute net infectiousness of humans (\\(x\\)) — compute_x","text":"Ross-Macdonald style transmission model, computed $$x = c X$$ method dispatches type model$human.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute net infectiousness of humans (\\(x\\)) — compute_x","text":"","code":"compute_x(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute net infectiousness of humans (\\(x\\)) — compute_x","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute net infectiousness of humans (\\(x\\)) — compute_x","text":"vector length n giving net infectiousness human hosts stratum","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_xd.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute net infectiousness of visitors (\\(x_{\\delta}\\)) — compute_xd","title":"Compute net infectiousness of visitors (\\(x_{\\delta}\\)) — compute_xd","text":"method dispatches type model$visitor.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_xd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute net infectiousness of visitors (\\(x_{\\delta}\\)) — compute_xd","text":"","code":"compute_xd(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_xd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute net infectiousness of visitors (\\(x_{\\delta}\\)) — compute_xd","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_xd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute net infectiousness of visitors (\\(x_{\\delta}\\)) — compute_xd","text":"vector length p giving net infectiousness visitors patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_xd.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute net infectiousness of visitors for trace model (\\(x_{\\delta}\\)) — compute_xd.trace","title":"Compute net infectiousness of visitors for trace model (\\(x_{\\delta}\\)) — compute_xd.trace","text":"Compute net infectiousness visitors trace model (\\(x_{\\delta}\\))","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_xd.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute net infectiousness of visitors for trace model (\\(x_{\\delta}\\)) — compute_xd.trace","text":"","code":"# S3 method for trace compute_xd(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_xd.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute net infectiousness of visitors for trace model (\\(x_{\\delta}\\)) — compute_xd.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/compute_xd.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute net infectiousness of visitors for trace model (\\(x_{\\delta}\\)) — compute_xd.trace","text":"vector length p giving net infectiousness visitors patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/distribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute items into bins as evenly as possible — distribute","title":"Distribute items into bins as evenly as possible — distribute","text":"Distribute items bins evenly possible","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/distribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute items into bins as evenly as possible — distribute","text":"","code":"distribute(n, p)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/distribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribute items into bins as evenly as possible — distribute","text":"n number bins p number items","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/distribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribute items into bins as evenly as possible — distribute","text":"numeric vector bin sizes","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/divmod.html","id":null,"dir":"Reference","previous_headings":"","what":"Division of integers — divmod","title":"Division of integers — divmod","text":"Division integers","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/divmod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Division of integers — divmod","text":"","code":"divmod(a, b)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/divmod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Division of integers — divmod","text":"dividend b divisor","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/divmod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Division of integers — divmod","text":"list two elements, quo (quotient) rem (remainder)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/draw_multinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a multinomially distributed random vector — draw_multinom","title":"Draw a multinomially distributed random vector — draw_multinom","text":"Warning: function argument checking. Ensure arguments follows.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/draw_multinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a multinomially distributed random vector — draw_multinom","text":"","code":"draw_multinom(n, prob)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/draw_multinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a multinomially distributed random vector — draw_multinom","text":"n integer giving number balls distribute bins prob vector probabilities bin, must sum one","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/draw_multinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a multinomially distributed random vector — draw_multinom","text":"integer vector length equal length prob","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/draw_multinom.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Draw a multinomially distributed random vector — draw_multinom","text":"function uses algorithm presented : Startek, Michał. \"asymptotically optimal, online algorithm weighted random sampling replacement.\" arXiv preprint arXiv:1611.00532 (2016).","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_K_aqua_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Get carrying capacity for Beverton-Holt aquatic mosquito model — get_K_aqua_BH","title":"Get carrying capacity for Beverton-Holt aquatic mosquito model — get_K_aqua_BH","text":"Get carrying capacity Beverton-Holt aquatic mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_K_aqua_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get carrying capacity for Beverton-Holt aquatic mosquito model — get_K_aqua_BH","text":"","code":"get_K_aqua_BH(model, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_K_aqua_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get carrying capacity for Beverton-Holt aquatic mosquito model — get_K_aqua_BH","text":"model object make_MicroMoB times vector times get values places vector places get values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_K_aqua_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get carrying capacity for Beverton-Holt aquatic mosquito model — get_K_aqua_BH","text":"matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_alternative_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for trace driven alternative blood hosts — get_config_alternative_trace","title":"Get parameters for trace driven alternative blood hosts — get_config_alternative_trace","text":"JSON config file two entries: O: vector matrix (see time_patch_varying_parameter valid dimensions) interpretation entries, please read setup_alternative_trace.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_alternative_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for trace driven alternative blood hosts — get_config_alternative_trace","text":"","code":"get_config_alternative_trace(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_alternative_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for trace driven alternative blood hosts — get_config_alternative_trace","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_alternative_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for trace driven alternative blood hosts — get_config_alternative_trace","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_alternative_trace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for trace driven alternative blood hosts — get_config_alternative_trace","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) par <- list(  \"O\" = rep(1, 5) ) toJSON(par, pretty = TRUE) #> { #>   \"O\": [1, 1, 1, 1, 1] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for aquatic (immature) model with Beverton-Holt dynamics — get_config_aqua_BH","title":"Get parameters for aquatic (immature) model with Beverton-Holt dynamics — get_config_aqua_BH","text":"JSON config file two entries: stochastic: boolean value molt: scalar, vector, matrix (row major) surv: scalar, vector, matrix (row major) K: scalar, vector, matrix (row major) L: vector Please see time_patch_varying_parameter allowed dimensions entries molt, surv, K. L length equal number patches. interpretation entries, please read setup_aqua_BH.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for aquatic (immature) model with Beverton-Holt dynamics — get_config_aqua_BH","text":"","code":"get_config_aqua_BH(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for aquatic (immature) model with Beverton-Holt dynamics — get_config_aqua_BH","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for aquatic (immature) model with Beverton-Holt dynamics — get_config_aqua_BH","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_BH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for aquatic (immature) model with Beverton-Holt dynamics — get_config_aqua_BH","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) p <- 5 # number of patches t <- 10 # number of days to simulate par <- list(  \"stochastic\" = FALSE,  \"molt\" = 0.3,  \"surv\" = rep(0.5, 365),  \"K\" = matrix(rpois(n = t * p, lambda = 100), nrow = p, ncol = t),  \"L\" = rep(10, p) ) toJSON(par, pretty = TRUE) #> { #>   \"stochastic\": [false], #>   \"molt\": [0.3], #>   \"surv\": [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], #>   \"K\": [ #>     [106, 86, 118, 97, 118, 103, 102, 98, 112, 91], #>     [76, 90, 81, 100, 91, 93, 86, 113, 96, 106], #>     [102, 98, 107, 105, 110, 93, 93, 97, 99, 101], #>     [93, 80, 103, 115, 88, 100, 102, 115, 94, 86], #>     [100, 88, 85, 95, 97, 99, 111, 105, 101, 100] #>   ], #>   \"L\": [10, 10, 10, 10, 10] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for aquatic (immature) model with forced emergence — get_config_aqua_trace","title":"Get parameters for aquatic (immature) model with forced emergence — get_config_aqua_trace","text":"JSON config file two entries: stochastic: boolean value lambda: scalar, vector, matrix (row major). passed time_patch_varying_parameter, see function's documentation appropriate dimensions. interpretation entries, please read setup_aqua_trace.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for aquatic (immature) model with forced emergence — get_config_aqua_trace","text":"","code":"get_config_aqua_trace(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for aquatic (immature) model with forced emergence — get_config_aqua_trace","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for aquatic (immature) model with forced emergence — get_config_aqua_trace","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_aqua_trace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for aquatic (immature) model with forced emergence — get_config_aqua_trace","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) t <- 10 # number of days to simulate par <- list(  \"stochastic\" = FALSE,  \"lambda\" = rpois(n = t, lambda = 10) ) toJSON(par, pretty = TRUE) #> { #>   \"stochastic\": [false], #>   \"lambda\": [7, 7, 11, 10, 12, 7, 9, 6, 13, 9] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_MOI.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for MOI human model — get_config_humans_MOI","title":"Get parameters for MOI human model — get_config_humans_MOI","text":"JSON config file 9 entries: stochastic: boolean value theta: matrix (row major) wf: vector H: vector MOI: matrix (row major) b: scalar c: scalar r: scalar sigma: scalar interpretation entries, please read setup_humans_MOI.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_MOI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for MOI human model — get_config_humans_MOI","text":"","code":"get_config_humans_MOI(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_MOI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for MOI human model — get_config_humans_MOI","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_MOI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for MOI human model — get_config_humans_MOI","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_MOI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for MOI human model — get_config_humans_MOI","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) n <- 6 # number of human population strata p <- 5 # number of patches theta <- matrix(rexp(n*p), nrow = n, ncol = p) theta <- theta / rowSums(theta) H <- rep(10, n) MOI <- matrix(0, nrow = 10, ncol = n) MOI[1, ] <- H par <- list(  \"stochastic\" = FALSE,  \"theta\" = theta,  \"wf\" = rep(1, n),  \"H\" = H,  \"MOI\" = MOI,  \"b\" = 0.55,  \"c\" = 0.15,  \"r\" = 1/200,  \"sigma\" = 1 ) toJSON(par, pretty = TRUE) #> { #>   \"stochastic\": [false], #>   \"theta\": [ #>     [0.3602, 0.4269, 0.0441, 0.0907, 0.0781], #>     [0.0916, 0.0394, 0.5366, 0.2825, 0.0498], #>     [0.0569, 0.142, 0.2442, 0.4685, 0.0883], #>     [0.4712, 0.1253, 0.0706, 0.1589, 0.174], #>     [0.064, 0.0055, 0.3785, 0.0962, 0.4558], #>     [0.0575, 0.1377, 0.6701, 0.0962, 0.0386] #>   ], #>   \"wf\": [1, 1, 1, 1, 1, 1], #>   \"H\": [10, 10, 10, 10, 10, 10], #>   \"MOI\": [ #>     [10, 10, 10, 10, 10, 10], #>     [0, 0, 0, 0, 0, 0], #>     [0, 0, 0, 0, 0, 0], #>     [0, 0, 0, 0, 0, 0], #>     [0, 0, 0, 0, 0, 0], #>     [0, 0, 0, 0, 0, 0], #>     [0, 0, 0, 0, 0, 0], #>     [0, 0, 0, 0, 0, 0], #>     [0, 0, 0, 0, 0, 0], #>     [0, 0, 0, 0, 0, 0] #>   ], #>   \"b\": [0.55], #>   \"c\": [0.15], #>   \"r\": [0.005], #>   \"sigma\": [1] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for SIR human model — get_config_humans_SIR","title":"Get parameters for SIR human model — get_config_humans_SIR","text":"JSON config file 8 entries: stochastic: boolean value theta: matrix (row major) wf: vector H: vector SIR: matrix (row major) b: scalar c: scalar gamma: scalar interpretation entries, please read setup_humans_SIR.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for SIR human model — get_config_humans_SIR","text":"","code":"get_config_humans_SIR(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for SIR human model — get_config_humans_SIR","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for SIR human model — get_config_humans_SIR","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for SIR human model — get_config_humans_SIR","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) n <- 6 # number of human population strata p <- 5 # number of patches theta <- matrix(rexp(n*p), nrow = n, ncol = p) theta <- theta / rowSums(theta) H <- rep(10, n) SIR <- matrix(0, nrow = n, ncol = 3) SIR[, 1] <- H par <- list(  \"stochastic\" = FALSE,  \"theta\" = theta,  \"wf\" = rep(1, n),  \"H\" = H,  \"SIR\" = SIR,  \"b\" = 0.55,  \"c\" = 0.15,  \"gamma\" = 1/7 ) toJSON(par, pretty = TRUE) #> { #>   \"stochastic\": [false], #>   \"theta\": [ #>     [0.6219, 0.1043, 0.0218, 0.0314, 0.2207], #>     [0.071, 0.3137, 0.3931, 0.1248, 0.0973], #>     [0.531, 0.075, 0.0294, 0.0841, 0.2804], #>     [0.0006, 0.2122, 0.12, 0.3839, 0.2833], #>     [0.1235, 0.0674, 0.3253, 0.0471, 0.4367], #>     [0.1113, 0.5225, 0.0079, 0.194, 0.1643] #>   ], #>   \"wf\": [1, 1, 1, 1, 1, 1], #>   \"H\": [10, 10, 10, 10, 10, 10], #>   \"SIR\": [ #>     [10, 0, 0], #>     [10, 0, 0], #>     [10, 0, 0], #>     [10, 0, 0], #>     [10, 0, 0], #>     [10, 0, 0] #>   ], #>   \"b\": [0.55], #>   \"c\": [0.15], #>   \"gamma\": [0.1429] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for SIS human model — get_config_humans_SIS","title":"Get parameters for SIS human model — get_config_humans_SIS","text":"JSON config file 8 entries: stochastic: boolean value theta: matrix (row major) wf: vector H: vector X: vector b: scalar c: scalar r: scalar interpretation entries, please read setup_humans_SIS.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for SIS human model — get_config_humans_SIS","text":"","code":"get_config_humans_SIS(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for SIS human model — get_config_humans_SIS","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for SIS human model — get_config_humans_SIS","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_humans_SIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for SIS human model — get_config_humans_SIS","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) n <- 6 # number of human population strata p <- 5 # number of patches theta <- matrix(rexp(n*p), nrow = n, ncol = p) theta <- theta / rowSums(theta) H <- rep(10, n) X <- rep(3, n) par <- list(  \"stochastic\" = FALSE,  \"theta\" = theta,  \"wf\" = rep(1, n),  \"H\" = H,  \"X\" = X,  \"b\" = 0.55,  \"c\" = 0.15,  \"r\" = 1/200 ) toJSON(par, pretty = TRUE) #> { #>   \"stochastic\": [false], #>   \"theta\": [ #>     [0.0543, 0.5348, 0.024, 0.2297, 0.1574], #>     [0.1098, 0.1824, 0.1584, 0.0679, 0.4814], #>     [0.2705, 0.1173, 0.0981, 0.1814, 0.3328], #>     [0.0474, 0.1887, 0.4689, 0.0163, 0.2786], #>     [0.2254, 0.3125, 0.0268, 0.4299, 0.0054], #>     [0.3219, 0.312, 0.0209, 0.005, 0.3401] #>   ], #>   \"wf\": [1, 1, 1, 1, 1, 1], #>   \"H\": [10, 10, 10, 10, 10, 10], #>   \"X\": [3, 3, 3, 3, 3, 3], #>   \"b\": [0.55], #>   \"c\": [0.15], #>   \"r\": [0.005] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for generalized Ross-Macdonald mosquito model — get_config_mosquito_RM","title":"Get parameters for generalized Ross-Macdonald mosquito model — get_config_mosquito_RM","text":"JSON config file 8 entries: stochastic: boolean value f: scalar q: scalar eip: scalar vector; see time_varying_parameter valid formats p: scalar vector; see time_varying_parameter valid formats psi: matrix nu: scalar M: vector Y: vector Z: vector interpretation entries, please read setup_mosquito_RM.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for generalized Ross-Macdonald mosquito model — get_config_mosquito_RM","text":"","code":"get_config_mosquito_RM(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for generalized Ross-Macdonald mosquito model — get_config_mosquito_RM","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for generalized Ross-Macdonald mosquito model — get_config_mosquito_RM","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_RM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for generalized Ross-Macdonald mosquito model — get_config_mosquito_RM","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) t <- 10 # days to simulate p <- 5 # number of patches EIP <-  rep(5, t) p_surv <- 0.95 psi <- matrix(rexp(p^2), nrow = p, ncol = p) psi <- psi / rowSums(psi) par <- list(  \"stochastic\" = FALSE,  \"f\" = 0.3,  \"q\" = 0.9,  \"eip\" = EIP,  \"p\" = p_surv,  \"psi\" = psi,  \"nu\" = 20,  \"M\" = rep(100, p),  \"Y\" = rep(20, p),  \"Z\" = rep(5, p) ) toJSON(par, pretty = TRUE) #> { #>   \"stochastic\": [false], #>   \"f\": [0.3], #>   \"q\": [0.9], #>   \"eip\": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], #>   \"p\": [0.95], #>   \"psi\": [ #>     [0.5381, 0.093, 0.1979, 0.0493, 0.1217], #>     [0.426, 0.0118, 0.0994, 0.1837, 0.279], #>     [0.3674, 0.2274, 0.0392, 0.0941, 0.2719], #>     [0.1911, 0.2409, 0.278, 0.2424, 0.0476], #>     [0.0559, 0.341, 0.1218, 0.3254, 0.1559] #>   ], #>   \"nu\": [20], #>   \"M\": [100, 100, 100, 100, 100], #>   \"Y\": [20, 20, 20, 20, 20], #>   \"Z\": [5, 5, 5, 5, 5] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for null mosquito model — get_config_mosquito_trace","title":"Get parameters for null mosquito model — get_config_mosquito_trace","text":"JSON config file 1 entry: oviposit: vector interpretation entries, please read setup_mosquito_trace.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for null mosquito model — get_config_mosquito_trace","text":"","code":"get_config_mosquito_trace(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for null mosquito model — get_config_mosquito_trace","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for null mosquito model — get_config_mosquito_trace","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_mosquito_trace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for null mosquito model — get_config_mosquito_trace","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) par <- list(  \"oviposit\" = rep(1, 5) ) toJSON(par, pretty = TRUE) #> { #>   \"oviposit\": [1, 1, 1, 1, 1] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_visitor_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters for trace driven visitors — get_config_visitor_trace","title":"Get parameters for trace driven visitors — get_config_visitor_trace","text":"JSON config file two entries: Wd: vector matrix (see time_patch_varying_parameter valid dimensions) xd: vector matrix (see time_patch_varying_parameter valid dimensions) interpretation entries, please read setup_visitor_trace.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_visitor_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters for trace driven visitors — get_config_visitor_trace","text":"","code":"get_config_visitor_trace(path)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_visitor_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters for trace driven visitors — get_config_visitor_trace","text":"path file path JSON file","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_visitor_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters for trace driven visitors — get_config_visitor_trace","text":"named list","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_config_visitor_trace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters for trace driven visitors — get_config_visitor_trace","text":"","code":"# to see an example of proper JSON input, run the following library(jsonlite) par <- list(  \"Wd\" = rep(1, 5),  \"xd\" = rep(0.01, 365) ) toJSON(par, pretty = TRUE) #> { #>   \"Wd\": [1, 1, 1, 1, 1], #>   \"xd\": [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01] #> }"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_eip_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get extrinsic incubation period for Ross-Macdonald mosquito model — get_eip_mosquito_RM","title":"Get extrinsic incubation period for Ross-Macdonald mosquito model — get_eip_mosquito_RM","text":"Get extrinsic incubation period Ross-Macdonald mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_eip_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get extrinsic incubation period for Ross-Macdonald mosquito model — get_eip_mosquito_RM","text":"","code":"get_eip_mosquito_RM(model, times)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_eip_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get extrinsic incubation period for Ross-Macdonald mosquito model — get_eip_mosquito_RM","text":"model object make_MicroMoB times vector times return","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_eip_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get extrinsic incubation period for Ross-Macdonald mosquito model — get_eip_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_f_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get feeding rate for Ross-Macdonald mosquito model — get_f_mosquito_RM","title":"Get feeding rate for Ross-Macdonald mosquito model — get_f_mosquito_RM","text":"Get feeding rate Ross-Macdonald mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_f_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get feeding rate for Ross-Macdonald mosquito model — get_f_mosquito_RM","text":"","code":"get_f_mosquito_RM(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_f_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get feeding rate for Ross-Macdonald mosquito model — get_f_mosquito_RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_f_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get feeding rate for Ross-Macdonald mosquito model — get_f_mosquito_RM","text":"vector","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_kappa_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get kappa for Ross-Macdonald mosquito model — get_kappa_mosquito_RM","title":"Get kappa for Ross-Macdonald mosquito model — get_kappa_mosquito_RM","text":"Get kappa Ross-Macdonald mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_kappa_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get kappa for Ross-Macdonald mosquito model — get_kappa_mosquito_RM","text":"","code":"get_kappa_mosquito_RM(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_kappa_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get kappa for Ross-Macdonald mosquito model — get_kappa_mosquito_RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_kappa_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get kappa for Ross-Macdonald mosquito model — get_kappa_mosquito_RM","text":"vector","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_lambda_aqua_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily emergence for Beverton-Holt aquatic mosquito model — get_lambda_aqua_trace","title":"Get daily emergence for Beverton-Holt aquatic mosquito model — get_lambda_aqua_trace","text":"Get daily emergence Beverton-Holt aquatic mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_lambda_aqua_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily emergence for Beverton-Holt aquatic mosquito model — get_lambda_aqua_trace","text":"","code":"get_lambda_aqua_trace(model, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_lambda_aqua_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily emergence for Beverton-Holt aquatic mosquito model — get_lambda_aqua_trace","text":"model object make_MicroMoB times vector times get values places vector places get values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_lambda_aqua_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily emergence for Beverton-Holt aquatic mosquito model — get_lambda_aqua_trace","text":"matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_molt_aqua_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily maturation probability for Beverton-Holt aquatic mosquito model — get_molt_aqua_BH","title":"Get daily maturation probability for Beverton-Holt aquatic mosquito model — get_molt_aqua_BH","text":"Get daily maturation probability Beverton-Holt aquatic mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_molt_aqua_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily maturation probability for Beverton-Holt aquatic mosquito model — get_molt_aqua_BH","text":"","code":"get_molt_aqua_BH(model, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_molt_aqua_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily maturation probability for Beverton-Holt aquatic mosquito model — get_molt_aqua_BH","text":"model object make_MicroMoB times vector times get values places vector places get values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_molt_aqua_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily maturation probability for Beverton-Holt aquatic mosquito model — get_molt_aqua_BH","text":"matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_nu_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of eggs laid per oviposition for Ross-Macdonald mosquito model — get_nu_mosquito_RM","title":"Get number of eggs laid per oviposition for Ross-Macdonald mosquito model — get_nu_mosquito_RM","text":"Get number eggs laid per oviposition Ross-Macdonald mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_nu_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of eggs laid per oviposition for Ross-Macdonald mosquito model — get_nu_mosquito_RM","text":"","code":"get_nu_mosquito_RM(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_nu_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of eggs laid per oviposition for Ross-Macdonald mosquito model — get_nu_mosquito_RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_nu_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of eggs laid per oviposition for Ross-Macdonald mosquito model — get_nu_mosquito_RM","text":"vector","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_p_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily survival probability for Ross-Macdonald mosquito model — get_p_mosquito_RM","title":"Get daily survival probability for Ross-Macdonald mosquito model — get_p_mosquito_RM","text":"Get daily survival probability Ross-Macdonald mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_p_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily survival probability for Ross-Macdonald mosquito model — get_p_mosquito_RM","text":"","code":"get_p_mosquito_RM(model, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_p_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily survival probability for Ross-Macdonald mosquito model — get_p_mosquito_RM","text":"model object make_MicroMoB times vector times get values places vector places get values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_p_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily survival probability for Ross-Macdonald mosquito model — get_p_mosquito_RM","text":"matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_psi_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mosquito dispersal matrix for Ross-Macdonald mosquito model — get_psi_mosquito_RM","title":"Get mosquito dispersal matrix for Ross-Macdonald mosquito model — get_psi_mosquito_RM","text":"Get mosquito dispersal matrix Ross-Macdonald mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_psi_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mosquito dispersal matrix for Ross-Macdonald mosquito model — get_psi_mosquito_RM","text":"","code":"get_psi_mosquito_RM(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_psi_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mosquito dispersal matrix for Ross-Macdonald mosquito model — get_psi_mosquito_RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_psi_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mosquito dispersal matrix for Ross-Macdonald mosquito model — get_psi_mosquito_RM","text":"matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_q_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get human blood feeding fraction for Ross-Macdonald mosquito model — get_q_mosquito_RM","title":"Get human blood feeding fraction for Ross-Macdonald mosquito model — get_q_mosquito_RM","text":"Get human blood feeding fraction Ross-Macdonald mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_q_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get human blood feeding fraction for Ross-Macdonald mosquito model — get_q_mosquito_RM","text":"","code":"get_q_mosquito_RM(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_q_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get human blood feeding fraction for Ross-Macdonald mosquito model — get_q_mosquito_RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_q_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get human blood feeding fraction for Ross-Macdonald mosquito model — get_q_mosquito_RM","text":"vector","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_surv_aqua_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily survival probability for Beverton-Holt aquatic mosquito model — get_surv_aqua_BH","title":"Get daily survival probability for Beverton-Holt aquatic mosquito model — get_surv_aqua_BH","text":"Get daily survival probability Beverton-Holt aquatic mosquito model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_surv_aqua_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily survival probability for Beverton-Holt aquatic mosquito model — get_surv_aqua_BH","text":"","code":"get_surv_aqua_BH(model, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_surv_aqua_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily survival probability for Beverton-Holt aquatic mosquito model — get_surv_aqua_BH","text":"model object make_MicroMoB times vector times get values places vector places get values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_surv_aqua_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily survival probability for Beverton-Holt aquatic mosquito model — get_surv_aqua_BH","text":"matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_tmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maximum time of simulation from model object — get_tmax","title":"Get maximum time of simulation from model object — get_tmax","text":"Get maximum time simulation model object","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_tmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maximum time of simulation from model object — get_tmax","text":"","code":"get_tmax(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_tmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maximum time of simulation from model object — get_tmax","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_tnow.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current time of simulation from model object — get_tnow","title":"Get current time of simulation from model object — get_tnow","text":"Get current time simulation model object","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_tnow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current time of simulation from model object — get_tnow","text":"","code":"get_tnow(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/get_tnow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get current time of simulation from model object — get_tnow","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/is_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Does a numeric object consist of only zeros and ones? — is_binary","title":"Does a numeric object consist of only zeros and ones? — is_binary","text":"numeric object consist zeros ones?","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/is_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does a numeric object consist of only zeros and ones? — is_binary","text":"","code":"is_binary(x)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/is_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does a numeric object consist of only zeros and ones? — is_binary","text":"x numeric object","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/is_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does a numeric object consist of only zeros and ones? — is_binary","text":"logical value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/make_MicroMoB.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a model object — make_MicroMoB","title":"Make a model object — make_MicroMoB","text":"model object hashed environment. default contains single list, model$global storing global state.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/make_MicroMoB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a model object — make_MicroMoB","text":"","code":"make_MicroMoB(tmax, p, l = p)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/make_MicroMoB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a model object — make_MicroMoB","text":"tmax number days simulate p number places l number aquatic habitats (optional, set p default)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/make_MicroMoB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a model object — make_MicroMoB","text":"object class environment","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Observe PfPR in human strata for SIP model — observe_pfpr.SIP","title":"Observe PfPR in human strata for SIP model — observe_pfpr.SIP","text":"Observe PfPR human strata SIP model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observe PfPR in human strata for SIP model — observe_pfpr.SIP","text":"","code":"# S3 method for SIP observe_pfpr(model, parameters)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observe PfPR in human strata for SIP model — observe_pfpr.SIP","text":"model object make_MicroMoB parameters named list, elements sens (sensitivity), spec (specificity), vector length equal number strata testprop gives proportion strata tested.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observe PfPR in human strata for SIP model — observe_pfpr.SIP","text":"array counts, actual condition first dimension tested condition second dimension, third dimension human strata","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Observe PfPR in human strata for SIS model — observe_pfpr.SIS","title":"Observe PfPR in human strata for SIS model — observe_pfpr.SIS","text":"Observe PfPR human strata SIS model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observe PfPR in human strata for SIS model — observe_pfpr.SIS","text":"","code":"# S3 method for SIS observe_pfpr(model, parameters)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observe PfPR in human strata for SIS model — observe_pfpr.SIS","text":"model object make_MicroMoB parameters named list, elements sens (sensitivity), spec (specificity), vector length equal number strata testprop gives proportion strata tested.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observe PfPR in human strata for SIS model — observe_pfpr.SIS","text":"array counts, actual condition first dimension tested condition second dimension, third dimension human strata","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Observe PfPR in human strata — observe_pfpr","title":"Observe PfPR in human strata — observe_pfpr","text":"method dispatches type model$human.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observe PfPR in human strata — observe_pfpr","text":"","code":"observe_pfpr(model, parameters)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observe PfPR in human strata — observe_pfpr","text":"model object make_MicroMoB parameters named list, elements sens (sensitivity), spec (specificity), vector length equal number strata testprop gives proportion strata tested.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/observe_pfpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observe PfPR in human strata — observe_pfpr","text":"array counts, actual condition first dimension tested condition second dimension, third dimension human strata","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Get output for aquatic (immature) mosquito populations with Beverton-Holt dynamics — output_aqua.BH","title":"Get output for aquatic (immature) mosquito populations with Beverton-Holt dynamics — output_aqua.BH","text":"Return data.frame.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get output for aquatic (immature) mosquito populations with Beverton-Holt dynamics — output_aqua.BH","text":"","code":"# S3 method for BH output_aqua(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get output for aquatic (immature) mosquito populations with Beverton-Holt dynamics — output_aqua.BH","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get output for aquatic (immature) mosquito populations with Beverton-Holt dynamics — output_aqua.BH","text":"data.frame columns L (immature) (emerging pupae)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.html","id":null,"dir":"Reference","previous_headings":"","what":"Get output for aquatic (immature) mosquito populations — output_aqua","title":"Get output for aquatic (immature) mosquito populations — output_aqua","text":"method dispatches type model$aqua. returns current state aquatic component.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get output for aquatic (immature) mosquito populations — output_aqua","text":"","code":"output_aqua(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get output for aquatic (immature) mosquito populations — output_aqua","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get output for aquatic (immature) mosquito populations — output_aqua","text":"data.frame","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Get output for aquatic (immature) mosquito populations with forced emergence — output_aqua.trace","title":"Get output for aquatic (immature) mosquito populations with forced emergence — output_aqua.trace","text":"function returns empty data.frame trace models endogenous dynamics.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get output for aquatic (immature) mosquito populations with forced emergence — output_aqua.trace","text":"","code":"# S3 method for trace output_aqua(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get output for aquatic (immature) mosquito populations with forced emergence — output_aqua.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_aqua.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get output for aquatic (immature) mosquito populations with forced emergence — output_aqua.trace","text":"data.frame","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get output for Ross-Macdonald mosquito populations — output_mosquitoes.RM","title":"Get output for Ross-Macdonald mosquito populations — output_mosquitoes.RM","text":"Return data.frame.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get output for Ross-Macdonald mosquito populations — output_mosquitoes.RM","text":"","code":"# S3 method for RM output_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get output for Ross-Macdonald mosquito populations — output_mosquitoes.RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get output for Ross-Macdonald mosquito populations — output_mosquitoes.RM","text":"data.frame columns M (adult mosquitoes), Y (infected mosquitoes), Z (infectious mosquitoes), rows correspond places.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get output for mosquito populations — output_mosquitoes","title":"Get output for mosquito populations — output_mosquitoes","text":"method dispatches type model$mosquito. returns current state adult mosquito component.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get output for mosquito populations — output_mosquitoes","text":"","code":"output_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get output for mosquito populations — output_mosquitoes","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get output for mosquito populations — output_mosquitoes","text":"data.frame","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Get output for null mosquito populations — output_mosquitoes.trace","title":"Get output for null mosquito populations — output_mosquitoes.trace","text":"function returns empty data.frame trace models endogenous dynamics.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get output for null mosquito populations — output_mosquitoes.trace","text":"","code":"# S3 method for trace output_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get output for null mosquito populations — output_mosquitoes.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/output_mosquitoes.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get output for null mosquito populations — output_mosquitoes.trace","text":"data.frame","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/sample_stochastic_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample a stochastic matrix — sample_stochastic_matrix","title":"Sample a stochastic matrix — sample_stochastic_matrix","text":"x matrix arbitrary number rows whose columns equal number bins stochastic matrix prob parameterizes distribution . row x gives distribution counts bins resampled according prob. conceptually similar \"stochastically\" distributing matrix x %*% prob, gives expectation.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/sample_stochastic_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample a stochastic matrix — sample_stochastic_matrix","text":"","code":"sample_stochastic_matrix(x, prob)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/sample_stochastic_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample a stochastic matrix — sample_stochastic_matrix","text":"x matrix prob matrix, must number columns equal number columns x rows sum one","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/sample_stochastic_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample a stochastic matrix — sample_stochastic_matrix","text":"matrix whose dimensions equal original x","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/sample_stochastic_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample a stochastic vector — sample_stochastic_vector","title":"Sample a stochastic vector — sample_stochastic_vector","text":"Given vector counts cells, x stochastic matrix prob, row describes probability distribution cell distributed among bins, sample destination bins cell count, return vector giving number counts bins. conceptually similar \"stochastically\" distributing vector x %*% prob, gives expectation.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/sample_stochastic_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample a stochastic vector — sample_stochastic_vector","text":"","code":"sample_stochastic_vector(x, prob)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/sample_stochastic_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample a stochastic vector — sample_stochastic_vector","text":"x vector prob matrix, must number rows equal x rows sum one","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/sample_stochastic_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample a stochastic vector — sample_stochastic_vector","text":"vector length equal number columns prob","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_K_aqua_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Set carrying capacity for Beverton-Holt aquatic mosquito model — set_K_aqua_BH","title":"Set carrying capacity for Beverton-Holt aquatic mosquito model — set_K_aqua_BH","text":"Change carrying capacity parameter K times places. parameter K stored internally matrix times places used modify submatrix, therefore new value K either scalar value update entire submatrix matrix places rows times columns.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_K_aqua_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set carrying capacity for Beverton-Holt aquatic mosquito model — set_K_aqua_BH","text":"","code":"set_K_aqua_BH(model, K, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_K_aqua_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set carrying capacity for Beverton-Holt aquatic mosquito model — set_K_aqua_BH","text":"model object make_MicroMoB K new carrying capacity times vector times set new values places vector places set new values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_K_aqua_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set carrying capacity for Beverton-Holt aquatic mosquito model — set_K_aqua_BH","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_eip_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Set extrinsic incubation period for Ross-Macdonald mosquito model — set_eip_mosquito_RM","title":"Set extrinsic incubation period for Ross-Macdonald mosquito model — set_eip_mosquito_RM","text":"Change extrinsic incubation period parameter eip set times. new values eip either scalar vector length equal length times.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_eip_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set extrinsic incubation period for Ross-Macdonald mosquito model — set_eip_mosquito_RM","text":"","code":"set_eip_mosquito_RM(model, eip, times)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_eip_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set extrinsic incubation period for Ross-Macdonald mosquito model — set_eip_mosquito_RM","text":"model object make_MicroMoB eip new extrinsic incubation period values times vector times set new values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_eip_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set extrinsic incubation period for Ross-Macdonald mosquito model — set_eip_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_f_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Set feeding rate for Ross-Macdonald mosquito model — set_f_mosquito_RM","title":"Set feeding rate for Ross-Macdonald mosquito model — set_f_mosquito_RM","text":"Change feeding rate parameter f.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_f_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set feeding rate for Ross-Macdonald mosquito model — set_f_mosquito_RM","text":"","code":"set_f_mosquito_RM(model, f)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_f_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set feeding rate for Ross-Macdonald mosquito model — set_f_mosquito_RM","text":"model object make_MicroMoB f new blood feeding rate","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_f_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set feeding rate for Ross-Macdonald mosquito model — set_f_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_kappa_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Set kappa for Ross-Macdonald mosquito model — set_kappa_mosquito_RM","title":"Set kappa for Ross-Macdonald mosquito model — set_kappa_mosquito_RM","text":"Change kappa.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_kappa_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set kappa for Ross-Macdonald mosquito model — set_kappa_mosquito_RM","text":"","code":"set_kappa_mosquito_RM(model, kappa)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_kappa_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set kappa for Ross-Macdonald mosquito model — set_kappa_mosquito_RM","text":"model object make_MicroMoB kappa new value kappa","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_kappa_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set kappa for Ross-Macdonald mosquito model — set_kappa_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_lambda_aqua_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Set daily emergence for trace (forced) aquatic mosquito model — set_lambda_aqua_trace","title":"Set daily emergence for trace (forced) aquatic mosquito model — set_lambda_aqua_trace","text":"Change daily emergence parameter lambda times places. parameter lambda stored internally matrix times places used modify submatrix, therefore new value lambda either scalar value update entire submatrix matrix places rows times columns.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_lambda_aqua_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set daily emergence for trace (forced) aquatic mosquito model — set_lambda_aqua_trace","text":"","code":"set_lambda_aqua_trace(model, lambda, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_lambda_aqua_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set daily emergence for trace (forced) aquatic mosquito model — set_lambda_aqua_trace","text":"model object make_MicroMoB lambda new emergence times vector times set new values places vector places set new values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_lambda_aqua_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set daily emergence for trace (forced) aquatic mosquito model — set_lambda_aqua_trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_molt_aqua_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Set daily maturation probability for Beverton-Holt aquatic mosquito model — set_molt_aqua_BH","title":"Set daily maturation probability for Beverton-Holt aquatic mosquito model — set_molt_aqua_BH","text":"Change daily maturation probability parameter molt times places. parameter molt stored internally matrix times places used modify submatrix, therefore new value molt either scalar value update entire submatrix matrix places rows times columns.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_molt_aqua_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set daily maturation probability for Beverton-Holt aquatic mosquito model — set_molt_aqua_BH","text":"","code":"set_molt_aqua_BH(model, molt, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_molt_aqua_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set daily maturation probability for Beverton-Holt aquatic mosquito model — set_molt_aqua_BH","text":"model object make_MicroMoB molt new daily maturation probability times vector times set new values places vector places set new values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_molt_aqua_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set daily maturation probability for Beverton-Holt aquatic mosquito model — set_molt_aqua_BH","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_nu_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Set number of eggs laid per oviposition for Ross-Macdonald mosquito model — set_nu_mosquito_RM","title":"Set number of eggs laid per oviposition for Ross-Macdonald mosquito model — set_nu_mosquito_RM","text":"Change number eggs laid per oviposition parameter nu.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_nu_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set number of eggs laid per oviposition for Ross-Macdonald mosquito model — set_nu_mosquito_RM","text":"","code":"set_nu_mosquito_RM(model, nu)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_nu_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set number of eggs laid per oviposition for Ross-Macdonald mosquito model — set_nu_mosquito_RM","text":"model object make_MicroMoB nu new number eggs laid per oviposition","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_nu_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set number of eggs laid per oviposition for Ross-Macdonald mosquito model — set_nu_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_p_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Set daily survival probability for Ross-Macdonald mosquito model — set_p_mosquito_RM","title":"Set daily survival probability for Ross-Macdonald mosquito model — set_p_mosquito_RM","text":"Change daily survival probability parameter p times places. parameter p stored internally matrix times places used modify submatrix, therefore new value p either scalar value update entire submatrix matrix places rows times columns.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_p_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set daily survival probability for Ross-Macdonald mosquito model — set_p_mosquito_RM","text":"","code":"set_p_mosquito_RM(model, p, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_p_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set daily survival probability for Ross-Macdonald mosquito model — set_p_mosquito_RM","text":"model object make_MicroMoB p new human blood feeding fraction times vector times set new values places vector places set new values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_p_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set daily survival probability for Ross-Macdonald mosquito model — set_p_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_psi_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Set mosquito dispersal matrix for Ross-Macdonald mosquito model — set_psi_mosquito_RM","title":"Set mosquito dispersal matrix for Ross-Macdonald mosquito model — set_psi_mosquito_RM","text":"Change mosquito dispersal matrix parameter psi.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_psi_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set mosquito dispersal matrix for Ross-Macdonald mosquito model — set_psi_mosquito_RM","text":"","code":"set_psi_mosquito_RM(model, psi)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_psi_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set mosquito dispersal matrix for Ross-Macdonald mosquito model — set_psi_mosquito_RM","text":"model object make_MicroMoB psi new mosquito dispersal matrix","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_psi_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set mosquito dispersal matrix for Ross-Macdonald mosquito model — set_psi_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_q_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Set human blood feeding fraction for Ross-Macdonald mosquito model — set_q_mosquito_RM","title":"Set human blood feeding fraction for Ross-Macdonald mosquito model — set_q_mosquito_RM","text":"Change human blood feeding fraction parameter q.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_q_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set human blood feeding fraction for Ross-Macdonald mosquito model — set_q_mosquito_RM","text":"","code":"set_q_mosquito_RM(model, q)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_q_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set human blood feeding fraction for Ross-Macdonald mosquito model — set_q_mosquito_RM","text":"model object make_MicroMoB q new human blood feeding fraction","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_q_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set human blood feeding fraction for Ross-Macdonald mosquito model — set_q_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_surv_aqua_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Set daily survival probability for Beverton-Holt aquatic mosquito model — set_surv_aqua_BH","title":"Set daily survival probability for Beverton-Holt aquatic mosquito model — set_surv_aqua_BH","text":"Change daily survival probability parameter surv times places. parameter surv stored internally matrix times places used modify submatrix, therefore new value surv either scalar value update entire submatrix matrix places rows times columns.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_surv_aqua_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set daily survival probability for Beverton-Holt aquatic mosquito model — set_surv_aqua_BH","text":"","code":"set_surv_aqua_BH(model, surv, times, places)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_surv_aqua_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set daily survival probability for Beverton-Holt aquatic mosquito model — set_surv_aqua_BH","text":"model object make_MicroMoB surv new daily survival probability times vector times set new values places vector places set new values","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/set_surv_aqua_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set daily survival probability for Beverton-Holt aquatic mosquito model — set_surv_aqua_BH","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_alternative_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup trace driven alternative blood hosts — setup_alternative_trace","title":"Setup trace driven alternative blood hosts — setup_alternative_trace","text":"model complies visitors component interface. adds named list model$alternative.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_alternative_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup trace driven alternative blood hosts — setup_alternative_trace","text":"","code":"setup_alternative_trace(model, O = NULL)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_alternative_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup trace driven alternative blood hosts — setup_alternative_trace","text":"model object make_MicroMoB O time varying trace passed time_patch_varying_parameter NULL set 0 (alternative blood hosts)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_alternative_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup trace driven alternative blood hosts — setup_alternative_trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup aquatic (immature) mosquito model with Beverton-Holt dynamics — setup_aqua_BH","title":"Setup aquatic (immature) mosquito model with Beverton-Holt dynamics — setup_aqua_BH","text":"single compartment aquatic stages modeled suffers density dependent mortality like Beverton-Holt model.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup aquatic (immature) mosquito model with Beverton-Holt dynamics — setup_aqua_BH","text":"","code":"setup_aqua_BH(model, stochastic, molt, surv, K, L)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup aquatic (immature) mosquito model with Beverton-Holt dynamics — setup_aqua_BH","text":"model object make_MicroMoB stochastic model update deterministically stochastically? molt proportion immature stages mature emerge adults day (may time patch varying see time_patch_varying_parameter) surv daily survival probability (may time patch varying see time_patch_varying_parameter) K carrying capacity (may time patch varying see time_patch_varying_parameter) L initial number immature mosquitoes","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup aquatic (immature) mosquito model with Beverton-Holt dynamics — setup_aqua_BH","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_BH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Setup aquatic (immature) mosquito model with Beverton-Holt dynamics — setup_aqua_BH","text":"parameters can passed either vector length equal l, matrix l rows tmax columns, matrix l rows 365 columns.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup aquatic (immature) mosquito model with trace (forced) emergence — setup_aqua_trace","title":"Setup aquatic (immature) mosquito model with trace (forced) emergence — setup_aqua_trace","text":"Emergence passed (possibly time varying) parameter decoupled adult mosquito dynamics. module assumes l p equivalent, emergence rates given p.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup aquatic (immature) mosquito model with trace (forced) emergence — setup_aqua_trace","text":"","code":"setup_aqua_trace(model, lambda, stochastic)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup aquatic (immature) mosquito model with trace (forced) emergence — setup_aqua_trace","text":"model object make_MicroMoB lambda daily emergence mosquitoes, may time patch varying, see time_patch_varying_parameter stochastic model update deterministically stochastically?","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_aqua_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup aquatic (immature) mosquito model with trace (forced) emergence — setup_aqua_trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_MOI.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup humans with MOI (multiplicity of infection) pathogen model — setup_humans_MOI","title":"Setup humans with MOI (multiplicity of infection) pathogen model — setup_humans_MOI","text":"queueing model (M/M/inf) superinfection humans.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_MOI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup humans with MOI (multiplicity of infection) pathogen model — setup_humans_MOI","text":"","code":"setup_humans_MOI(   model,   stochastic,   theta,   wf = NULL,   H,   MOI,   b = 0.55,   c = 0.15,   r = 1/200,   sigma = 1 )"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_MOI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup humans with MOI (multiplicity of infection) pathogen model — setup_humans_MOI","text":"model object make_MicroMoB stochastic model update deterministically stochastically? theta time spent matrix wf biting weights H vector strata population sizes MOI matrix giving distribution persons across strata (columns) multiplicity infection (rows). b transmission efficiency (mosquito human) c transmission efficiency (human mosquito) r recovery rate (inverse infectious duration) sigma control non-independence pathogen clearance; sigma > 1 indicates competition (clearance faster independent) sigma < 1 indicates facilitation (clearance slower independent).","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_MOI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup humans with MOI (multiplicity of infection) pathogen model — setup_humans_MOI","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_MOI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Setup humans with MOI (multiplicity of infection) pathogen model — setup_humans_MOI","text":"step_humans method MOI model grow MOI matrix (add rows) individual's MOI exceeds size matrix; therefore good idea pad input matrix extra empty rows avoid reallocating memory simulation much possible.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup humans with SIP pathogen model — setup_humans_SIP","title":"Setup humans with SIP pathogen model — setup_humans_SIP","text":"simple SIP (Susceptible-Infected-Protected) model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup humans with SIP pathogen model — setup_humans_SIP","text":"","code":"setup_humans_SIP(   model,   stochastic,   theta,   wf = NULL,   SIP,   b = 0.55,   c = 0.15,   r = 1/200,   rho = 0.07,   eta = 1/32 )"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup humans with SIP pathogen model — setup_humans_SIP","text":"model object make_MicroMoB stochastic model update deterministically stochastically? theta time spent matrix wf biting weights SIP matrix strata (rows) health states (SIP) b transmission efficiency (mosquito human) c transmission efficiency (human mosquito) r recovery rate (inverse infectious duration) rho probability treatment upon infection eta rate prophylaxis decays","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup humans with SIP pathogen model — setup_humans_SIP","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup humans with SIR infection model — setup_humans_SIR","title":"Setup humans with SIR infection model — setup_humans_SIR","text":"simple SIR (Susceptible-Infected-Recovered) model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup humans with SIR infection model — setup_humans_SIR","text":"","code":"setup_humans_SIR(   model,   stochastic,   theta,   wf = NULL,   H,   SIR,   b = 0.55,   c = 0.15,   gamma = 1/5 )"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup humans with SIR infection model — setup_humans_SIR","text":"model object make_MicroMoB stochastic model update deterministically stochastically? theta time spent matrix wf biting weights H vector strata population sizes SIR matrix giving S, , R counts (columns) strata (rows) b transmission efficiency (mosquito human) c transmission efficiency (human mosquito) gamma rate recovery","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup humans with SIR infection model — setup_humans_SIR","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup humans with SIS pathogen model — setup_humans_SIS","title":"Setup humans with SIS pathogen model — setup_humans_SIS","text":"simple SIS (Susceptible-Infected-Susceptible) model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup humans with SIS pathogen model — setup_humans_SIS","text":"","code":"setup_humans_SIS(   model,   stochastic,   theta,   wf = NULL,   H,   X,   b = 0.55,   c = 0.15,   r = 1/200 )"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup humans with SIS pathogen model — setup_humans_SIS","text":"model object make_MicroMoB stochastic model update deterministically stochastically? theta time spent matrix wf biting weights H vector strata population sizes X number infectious persons strata b transmission efficiency (mosquito human) c transmission efficiency (human mosquito) r recovery rate (inverse infectious duration)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_humans_SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup humans with SIS pathogen model — setup_humans_SIS","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_BQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup blood feeding & oviposition (BQ) behavioral state mosquito model — setup_mosquito_BQ","title":"Setup blood feeding & oviposition (BQ) behavioral state mosquito model — setup_mosquito_BQ","text":"behavioral state model allows time varying EIP survival probability. Mosquitoes transition blood feeding (B) oviposition (Q) depending success () biological activities. complies mosquito component interface, may simulated deterministically stochastically.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_BQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup blood feeding & oviposition (BQ) behavioral state mosquito model — setup_mosquito_BQ","text":"","code":"setup_mosquito_BQ(   model,   stochastic,   eip,   pB,   pQ,   psiQ,   Psi_bb,   Psi_bq,   Psi_qb,   Psi_qq,   nu = 25,   M,   Y )"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_BQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup blood feeding & oviposition (BQ) behavioral state mosquito model — setup_mosquito_BQ","text":"model object make_MicroMoB stochastic model update deterministically stochastically? eip Extrinsic Incubation Period (may time varying see time_varying_parameter) pB daily survival probability blood feeding (may time patch varying see time_patch_varying_parameter) pQ daily survival probability oviposition (may time patch varying see time_patch_varying_parameter) psiQ oviposition success probability (may time patch varying see time_patch_varying_parameter) Psi_bb movement matrix blood feeding haunts blood feeding haunts (columns must sum 1, p rows columns) Psi_bq movement matrix blood feeding haunts aquatic habitats (columns must sum 1, l rows p columns) Psi_qb movement matrix aquatic habitats blood feeding haunts (columns must sum 1, p rows l columns) Psi_qq movement matrix aquatic habitats aquatic habitats (columns must sum 1, l rows columns) nu number eggs laid per oviposition M number susceptible mosquitoes (vector length p + l) Y number incubating mosquitoes (matrix p + l rows maxEIP + 1 columns)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_BQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup blood feeding & oviposition (BQ) behavioral state mosquito model — setup_mosquito_BQ","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup generalized Ross-Macdonald mosquito model — setup_mosquito_RM","title":"Setup generalized Ross-Macdonald mosquito model — setup_mosquito_RM","text":"generalized RM model allows time varying EIP survival probability. complies mosquito component interface, may simulated deterministically stochastically.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup generalized Ross-Macdonald mosquito model — setup_mosquito_RM","text":"","code":"setup_mosquito_RM(   model,   stochastic,   f = 0.3,   q = 0.9,   eip,   p,   psi,   nu = 25,   M,   Y,   Z,   N = NULL )"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup generalized Ross-Macdonald mosquito model — setup_mosquito_RM","text":"model object make_MicroMoB stochastic model update deterministically stochastically? f blood feeding rate q human blood feeding fraction eip Extrinsic Incubation Period (may time varying see time_varying_parameter) p daily survival probability (may time patch varying see time_patch_varying_parameter) psi mosquito dispersal matrix (rows must sum 1) nu number eggs laid per oviposition M total mosquito density per patch (vector length p) Y density incubating mosquitoes per patch (vector length p) Z density infectious mosquitoes per patch (vector length p) N l p matrix describing eggs mosquitoes patches distributed amongst aquatic habitats. NULL identity matrix dimension l.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup generalized Ross-Macdonald mosquito model — setup_mosquito_RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup null mosquito model — setup_mosquito_trace","title":"Setup null mosquito model — setup_mosquito_trace","text":"null model mosquito dynamics testing/verifying aquatic models. implements single method compute_oviposit.trace methods throw error.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup null mosquito model — setup_mosquito_trace","text":"","code":"setup_mosquito_trace(model, oviposit)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup null mosquito model — setup_mosquito_trace","text":"model object make_MicroMoB oviposit vector length p used return value compute_oviposit","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_mosquito_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup null mosquito model — setup_mosquito_trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_visitor_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup trace driven visitors — setup_visitor_trace","title":"Setup trace driven visitors — setup_visitor_trace","text":"model complies visitors component interface. adds named list model$visitor.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_visitor_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup trace driven visitors — setup_visitor_trace","text":"","code":"setup_visitor_trace(model, Wd = NULL, xd = NULL)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_visitor_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup trace driven visitors — setup_visitor_trace","text":"model object make_MicroMoB Wd time varying trace visitor host availability passed time_patch_varying_parameter NULL set 0 (visitors) xd time varying trace visitor net infectiousness passed time_patch_varying_parameter NULL set 0 (visitors)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/setup_visitor_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup trace driven visitors — setup_visitor_trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Update aquatic (immature) mosquito populations for Beverton-Holt dynamics — step_aqua.BH","title":"Update aquatic (immature) mosquito populations for Beverton-Holt dynamics — step_aqua.BH","text":"function dispatches second class attribute model$aqua stochastic deterministic behavior.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update aquatic (immature) mosquito populations for Beverton-Holt dynamics — step_aqua.BH","text":"","code":"# S3 method for BH step_aqua(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update aquatic (immature) mosquito populations for Beverton-Holt dynamics — step_aqua.BH","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update aquatic (immature) mosquito populations for Beverton-Holt dynamics — step_aqua.BH","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update aquatic (immature) mosquito populations for deterministic Beverton-Holt dynamics — step_aqua.BH_deterministic","title":"Update aquatic (immature) mosquito populations for deterministic Beverton-Holt dynamics — step_aqua.BH_deterministic","text":"Run deterministic state update.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update aquatic (immature) mosquito populations for deterministic Beverton-Holt dynamics — step_aqua.BH_deterministic","text":"","code":"# S3 method for BH_deterministic step_aqua(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update aquatic (immature) mosquito populations for deterministic Beverton-Holt dynamics — step_aqua.BH_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update aquatic (immature) mosquito populations for deterministic Beverton-Holt dynamics — step_aqua.BH_deterministic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update aquatic (immature) mosquito populations for stochastic Beverton-Holt dynamics — step_aqua.BH_stochastic","title":"Update aquatic (immature) mosquito populations for stochastic Beverton-Holt dynamics — step_aqua.BH_stochastic","text":"Run stochastic state update.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update aquatic (immature) mosquito populations for stochastic Beverton-Holt dynamics — step_aqua.BH_stochastic","text":"","code":"# S3 method for BH_stochastic step_aqua(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update aquatic (immature) mosquito populations for stochastic Beverton-Holt dynamics — step_aqua.BH_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.BH_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update aquatic (immature) mosquito populations for stochastic Beverton-Holt dynamics — step_aqua.BH_stochastic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.html","id":null,"dir":"Reference","previous_headings":"","what":"Update aquatic (immature) mosquito populations — step_aqua","title":"Update aquatic (immature) mosquito populations — step_aqua","text":"method dispatches type model$aqua","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update aquatic (immature) mosquito populations — step_aqua","text":"","code":"step_aqua(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update aquatic (immature) mosquito populations — step_aqua","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update aquatic (immature) mosquito populations — step_aqua","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Update aquatic (immature) mosquito populations for forced emergence — step_aqua.trace","title":"Update aquatic (immature) mosquito populations for forced emergence — step_aqua.trace","text":"function nothing trace models endogenous dynamics.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update aquatic (immature) mosquito populations for forced emergence — step_aqua.trace","text":"","code":"# S3 method for trace step_aqua(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update aquatic (immature) mosquito populations for forced emergence — step_aqua.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_aqua.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update aquatic (immature) mosquito populations for forced emergence — step_aqua.trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI.html","id":null,"dir":"Reference","previous_headings":"","what":"Update MOI human model — step_humans.MOI","title":"Update MOI human model — step_humans.MOI","text":"Update MOI human model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update MOI human model — step_humans.MOI","text":"","code":"# S3 method for MOI step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update MOI human model — step_humans.MOI","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update MOI human model — step_humans.MOI","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update MOI human model (deterministic) — step_humans.MOI_deterministic","title":"Update MOI human model (deterministic) — step_humans.MOI_deterministic","text":"Update MOI human model (deterministic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update MOI human model (deterministic) — step_humans.MOI_deterministic","text":"","code":"# S3 method for MOI_deterministic step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update MOI human model (deterministic) — step_humans.MOI_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update MOI human model (deterministic) — step_humans.MOI_deterministic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update MOI human model (stochastic) — step_humans.MOI_stochastic","title":"Update MOI human model (stochastic) — step_humans.MOI_stochastic","text":"Update MOI human model (stochastic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update MOI human model (stochastic) — step_humans.MOI_stochastic","text":"","code":"# S3 method for MOI_stochastic step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update MOI human model (stochastic) — step_humans.MOI_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.MOI_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update MOI human model (stochastic) — step_humans.MOI_stochastic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIP human model — step_humans.SIP","title":"Update SIP human model — step_humans.SIP","text":"Update SIP human model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIP human model — step_humans.SIP","text":"","code":"# S3 method for SIP step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIP human model — step_humans.SIP","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIP human model — step_humans.SIP","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIP human model (deterministic) — step_humans.SIP_deterministic","title":"Update SIP human model (deterministic) — step_humans.SIP_deterministic","text":"Update SIP human model (deterministic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIP human model (deterministic) — step_humans.SIP_deterministic","text":"","code":"# S3 method for SIP_deterministic step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIP human model (deterministic) — step_humans.SIP_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIP human model (deterministic) — step_humans.SIP_deterministic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIP human model (stochastic) — step_humans.SIP_stochastic","title":"Update SIP human model (stochastic) — step_humans.SIP_stochastic","text":"Update SIP human model (stochastic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIP human model (stochastic) — step_humans.SIP_stochastic","text":"","code":"# S3 method for SIP_stochastic step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIP human model (stochastic) — step_humans.SIP_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIP_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIP human model (stochastic) — step_humans.SIP_stochastic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIR human model — step_humans.SIR","title":"Update SIR human model — step_humans.SIR","text":"Update SIR human model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIR human model — step_humans.SIR","text":"","code":"# S3 method for SIR step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIR human model — step_humans.SIR","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIR human model — step_humans.SIR","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIR human model (deterministic) — step_humans.SIR_deterministic","title":"Update SIR human model (deterministic) — step_humans.SIR_deterministic","text":"Update SIR human model (deterministic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIR human model (deterministic) — step_humans.SIR_deterministic","text":"","code":"# S3 method for SIR_deterministic step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIR human model (deterministic) — step_humans.SIR_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIR human model (deterministic) — step_humans.SIR_deterministic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIR human model (stochastic) — step_humans.SIR_stochastic","title":"Update SIR human model (stochastic) — step_humans.SIR_stochastic","text":"Update SIR human model (stochastic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIR human model (stochastic) — step_humans.SIR_stochastic","text":"","code":"# S3 method for SIR_stochastic step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIR human model (stochastic) — step_humans.SIR_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIR_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIR human model (stochastic) — step_humans.SIR_stochastic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIS human model — step_humans.SIS","title":"Update SIS human model — step_humans.SIS","text":"Update SIS human model","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIS human model — step_humans.SIS","text":"","code":"# S3 method for SIS step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIS human model — step_humans.SIS","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIS human model — step_humans.SIS","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIS human model (deterministic) — step_humans.SIS_deterministic","title":"Update SIS human model (deterministic) — step_humans.SIS_deterministic","text":"Update SIS human model (deterministic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIS human model (deterministic) — step_humans.SIS_deterministic","text":"","code":"# S3 method for SIS_deterministic step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIS human model (deterministic) — step_humans.SIS_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIS human model (deterministic) — step_humans.SIS_deterministic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SIS human model (stochastic) — step_humans.SIS_stochastic","title":"Update SIS human model (stochastic) — step_humans.SIS_stochastic","text":"Update SIS human model (stochastic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SIS human model (stochastic) — step_humans.SIS_stochastic","text":"","code":"# S3 method for SIS_stochastic step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SIS human model (stochastic) — step_humans.SIS_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.SIS_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SIS human model (stochastic) — step_humans.SIS_stochastic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.html","id":null,"dir":"Reference","previous_headings":"","what":"Update human population — step_humans","title":"Update human population — step_humans","text":"method dispatches type model$human.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update human population — step_humans","text":"","code":"step_humans(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update human population — step_humans","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_humans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update human population — step_humans","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes — step_mosquitoes.BQ","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes — step_mosquitoes.BQ","text":"function dispatches second argument model$mosquito stochastic deterministic behavior.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes — step_mosquitoes.BQ","text":"","code":"# S3 method for BQ step_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes — step_mosquitoes.BQ","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes — step_mosquitoes.BQ","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes — step_mosquitoes.BQ","text":"see step_mosquitoes.BQ_deterministic step_mosquitoes.BQ_stochastic","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (deterministic) — step_mosquitoes.BQ_deterministic","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (deterministic) — step_mosquitoes.BQ_deterministic","text":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (deterministic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (deterministic) — step_mosquitoes.BQ_deterministic","text":"","code":"# S3 method for BQ_deterministic step_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (deterministic) — step_mosquitoes.BQ_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (deterministic) — step_mosquitoes.BQ_deterministic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (stochastic) — step_mosquitoes.BQ_stochastic","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (stochastic) — step_mosquitoes.BQ_stochastic","text":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (stochastic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (stochastic) — step_mosquitoes.BQ_stochastic","text":"","code":"# S3 method for BQ_stochastic step_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (stochastic) — step_mosquitoes.BQ_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.BQ_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update blood feeding & oviposition (BQ) behavioral state mosquitoes (stochastic) — step_mosquitoes.BQ_stochastic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Ross-Macdonald mosquitoes — step_mosquitoes.RM","title":"Update Ross-Macdonald mosquitoes — step_mosquitoes.RM","text":"function dispatches second argument model$mosquito stochastic deterministic behavior.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Ross-Macdonald mosquitoes — step_mosquitoes.RM","text":"","code":"# S3 method for RM step_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Ross-Macdonald mosquitoes — step_mosquitoes.RM","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Ross-Macdonald mosquitoes — step_mosquitoes.RM","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update Ross-Macdonald mosquitoes — step_mosquitoes.RM","text":"see step_mosquitoes.RM_deterministic step_mosquitoes.RM_stochastic","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM_deterministic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Ross-Macdonald mosquitoes (deterministic) — step_mosquitoes.RM_deterministic","title":"Update Ross-Macdonald mosquitoes (deterministic) — step_mosquitoes.RM_deterministic","text":"Update Ross-Macdonald mosquitoes (deterministic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM_deterministic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Ross-Macdonald mosquitoes (deterministic) — step_mosquitoes.RM_deterministic","text":"","code":"# S3 method for RM_deterministic step_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM_deterministic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Ross-Macdonald mosquitoes (deterministic) — step_mosquitoes.RM_deterministic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM_deterministic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Ross-Macdonald mosquitoes (deterministic) — step_mosquitoes.RM_deterministic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM_stochastic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Ross-Macdonald mosquitoes (stochastic) — step_mosquitoes.RM_stochastic","title":"Update Ross-Macdonald mosquitoes (stochastic) — step_mosquitoes.RM_stochastic","text":"Update Ross-Macdonald mosquitoes (stochastic)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM_stochastic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Ross-Macdonald mosquitoes (stochastic) — step_mosquitoes.RM_stochastic","text":"","code":"# S3 method for RM_stochastic step_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM_stochastic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Ross-Macdonald mosquitoes (stochastic) — step_mosquitoes.RM_stochastic","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.RM_stochastic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Ross-Macdonald mosquitoes (stochastic) — step_mosquitoes.RM_stochastic","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.html","id":null,"dir":"Reference","previous_headings":"","what":"Update mosquito population — step_mosquitoes","title":"Update mosquito population — step_mosquitoes","text":"method dispatches type model$mosquito","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update mosquito population — step_mosquitoes","text":"","code":"step_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update mosquito population — step_mosquitoes","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update mosquito population — step_mosquitoes","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Update null mosquito population — step_mosquitoes.trace","title":"Update null mosquito population — step_mosquitoes.trace","text":"Update null mosquito population","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update null mosquito population — step_mosquitoes.trace","text":"","code":"# S3 method for trace step_mosquitoes(model)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update null mosquito population — step_mosquitoes.trace","text":"model object make_MicroMoB","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/step_mosquitoes.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update null mosquito population — step_mosquitoes.trace","text":"return value","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for lumped population strata (counts) — strata_to_residency_counts","title":"Helper function for lumped population strata (counts) — strata_to_residency_counts","text":"input given matrix population counts per strata (columns) patch (rows), function calculates residency matrix population size overall stratification residency strata.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for lumped population strata (counts) — strata_to_residency_counts","text":"","code":"strata_to_residency_counts(H_counts)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for lumped population strata (counts) — strata_to_residency_counts","text":"H_counts matrix population counts","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for lumped population strata (counts) — strata_to_residency_counts","text":"list three elements: J: residency matrix mapping elements H patches H: overall population distribution strata patches","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for lumped population strata (counts) — strata_to_residency_counts","text":"","code":"# taken from package tests J <- matrix(    c(0.3, 0.5, 0.2,    0.1, 0.6, 0.3), nrow = 3, ncol = 2, byrow = FALSE ) H <- c(50, 60) H_overall <- J %*% diag(H) residency <- strata_to_residency_proportion(H_strata = H, J_strata = J)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for lumped population strata (proportional assignment) — strata_to_residency_proportion","title":"Helper function for lumped population strata (proportional assignment) — strata_to_residency_proportion","text":"input given vector population sizes per-strata, lumped patches, separate matrix whose columns describe strata distributed patches, function calculates residency matrix population size overall stratification residency strata.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for lumped population strata (proportional assignment) — strata_to_residency_proportion","text":"","code":"strata_to_residency_proportion(H_strata, J_strata)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for lumped population strata (proportional assignment) — strata_to_residency_proportion","text":"H_strata vector population size strata J_strata matrix whose columns sum one giving distribution strata (columns) populations patches (rows)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for lumped population strata (proportional assignment) — strata_to_residency_proportion","text":"list three elements: assignment_indices: provides mapping patch (rows) strata (columns) \"unrolled\" vector H J: residency matrix mapping elements H patches H: overall population distribution strata patches","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/strata_to_residency_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for lumped population strata (proportional assignment) — strata_to_residency_proportion","text":"","code":"# taken from package tests J <- matrix(    c(0.3, 0.5, 0.2,    0.1, 0.6, 0.3), nrow = 3, ncol = 2, byrow = FALSE ) H <- c(50, 60) # get the overall assignment of strata (cols) across patches (rows) H_overall <- J %*% diag(H) residency <- strata_to_residency_proportion(H_strata = H, J_strata = J)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/time_patch_varying_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Input parameters that may vary by time and patch — time_patch_varying_parameter","title":"Input parameters that may vary by time and patch — time_patch_varying_parameter","text":"Input parameters may vary time patch","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/time_patch_varying_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input parameters that may vary by time and patch — time_patch_varying_parameter","text":"","code":"time_patch_varying_parameter(param, p, tmax)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/time_patch_varying_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input parameters that may vary by time and patch — time_patch_varying_parameter","text":"param given matrix, must nrows equal p ncols equal either tmax 365; given vector must length p, tmax, 365. p number patches tmax number time steps","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/time_patch_varying_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Input parameters that may vary by time and patch — time_patch_varying_parameter","text":"matrix p rows tmax columns","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/time_varying_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Input parameters that may vary by time — time_varying_parameter","title":"Input parameters that may vary by time — time_varying_parameter","text":"Input parameters may vary time","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/time_varying_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input parameters that may vary by time — time_varying_parameter","text":"","code":"time_varying_parameter(param, tmax)"},{"path":"https://dd-harp.github.io/MicroMoB/reference/time_varying_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input parameters that may vary by time — time_varying_parameter","text":"param vector length 1, tmax, 365. tmax number time steps","code":""},{"path":"https://dd-harp.github.io/MicroMoB/reference/time_varying_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Input parameters that may vary by time — time_varying_parameter","text":"vector tmax elements","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-012","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.1.2","title":"MicroMoB 0.1.2","text":"skip plumber API tests CRAN due occasional failures developer control.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-011","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.1.1","title":"MicroMoB 0.1.1","text":"coerce initial state integer type setup_humans_SIP() add getters setters parameters mosquito RM, aquatic BH, aquatic trace models.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-010","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.1.0","title":"MicroMoB 0.1.0","text":"CRAN release: 2022-07-01 adds ability model larval breeding pools separately patches adds human SIP (Susceptible-Infected-Protected) model adds prevalence sampling test sens/spec observe_pfpr() adds simple bloodmeal computation compute_bloodmeal_simple() significantly simplifies step_mosquitoes.RM_stochastic() update vignettes better use data.table discrete time equilibrium calculations","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-0012","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.12","title":"MicroMoB 0.0.12","text":"CRAN release: 2022-03-17 move plumber dependency “Suggests” avoid NOTE checks. fix bug step_mosquitoes.RM_deterministic mortality applied incubating mosquitoes correctly dependent patch. use plumber:::findPort() test plumber API","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-0011","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.11","title":"MicroMoB 0.0.11","text":"CRAN release: 2022-03-08 add behavioral state model adult mosquito dynamics.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-0010","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.10","title":"MicroMoB 0.0.10","text":"add functions model allowing parameters read specially formatted JSON files add inst/extdata folder JSON files testing config add jsonlite package Imports JSON config capability add plumber package Imports expose web API add inst/plumber/ subfolders store Plumber APIs add callr package Suggests testing API add httr package Suggests testing API add callr package Suggests using CSV serialization return simulation output API p parameter RM adult mosquito model now allowed patch time varying add new vignette “Advanced topics” describing extend package Plumber web API. add withr package Suggests clean testing API.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-009","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.9","title":"MicroMoB 0.0.9","text":"CRAN release: 2022-02-01 add information return value function documentation reset par options vignettes improve diagrams vignettes","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-008","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.8","title":"MicroMoB 0.0.8","text":"add SIR model human infection.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-007","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.7","title":"MicroMoB 0.0.7","text":"fix moved URL README.md per CRAN request.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-006","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.6","title":"MicroMoB 0.0.6","text":"improve vignettes documentation clarity. fix DESCRIPTION according CRAN checks.","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-005","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.5","title":"MicroMoB 0.0.5","text":"higher quality graphics (https://github.com/dd-harp/MicroMoB/issues/47) bloodmeal directed wiring diagram (https://github.com/dd-harp/MicroMoB/issues/41)","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-004","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.4","title":"MicroMoB 0.0.4","text":"faster multinomial draws, using algorithm presented “asymptotically optimal, online algorithm weighted random sampling replacement”","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-003","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.3","title":"MicroMoB 0.0.3","text":"add Code Conduct improvements vignettes (bloodmeal.Rmd MicroMoB.Rmd) improvements function reference page","code":""},{"path":"https://dd-harp.github.io/MicroMoB/news/index.html","id":"micromob-002","dir":"Changelog","previous_headings":"","what":"MicroMoB 0.0.2","title":"MicroMoB 0.0.2","text":"initial release minimum viable product: https://github.com/dd-harp/MicroMoB/issues/28","code":""}]
