template:
  bootstrap: 5
  bslib:
    border-radius: 0.5rem
    btn-border-radius: 0.25rem

url: https://dd-harp.github.io/MicroMoB/

articles:
- title: Vignettes
  navbar: ~
  contents:
  - MicroMoB
  - bloodmeal
  - RM_mosquito
  - BQ_mosquito
  - MOI_human
  - BH_aqua
  - RM_transmission
  - Advanced
  - Contributing

reference:
- title: Bloodmeal
  desc: >
    The bloodmeal function computes bites taken by mosquitoes on hosts relevant
    for pathogen transmission between species over a time step. After it is computed, the various
    components can be updated independently.
  contents:
  - compute_bloodmeal
  - compute_bloodmeal_simple

- title: Adult mosquito component

  desc: >
    The adult mosquito component is responsible for updating mosquito populations
    of the adult (flying) life stage, and handling pathogen dynamics in adult
    populations. Any model of adult mosquitoes in MicroMoB is required to
    implement the following interface methods. It is stored and dispatches on
    the object in `model$mosquito`.
  contents:
  - output_mosquitoes
  - step_mosquitoes
  - compute_f
  - compute_q
  - compute_Z
  - compute_oviposit

- subtitle: Ross-Macdonald (RM) mosquito model
  desc: This model implements the generalized RM mosquito model.
  contents:
  - setup_mosquito_RM
  - get_config_mosquito_RM
  - output_mosquitoes.RM
  - step_mosquitoes.RM
  - step_mosquitoes.RM_deterministic
  - step_mosquitoes.RM_stochastic
  - compute_f.RM
  - compute_q.RM
  - compute_Z.RM
  - compute_oviposit.RM
  - compute_oviposit.RM_deterministic
  - compute_oviposit.RM_stochastic

- subtitle: Behavioral state mosquito model
  desc: >
    This is a behavioral state model of mosquitoes which transition between
    oviposition and blood feeding. It also implements infection and incubation.
  contents:
  - setup_mosquito_BQ
  - step_mosquitoes.BQ
  - step_mosquitoes.BQ_deterministic
  - step_mosquitoes.BQ_stochastic
  - compute_f.BQ
  - compute_q.BQ
  - compute_Z.BQ
  - compute_oviposit.BQ
  - compute_oviposit.BQ_deterministic
  - compute_oviposit.BQ_stochastic

- subtitle: Trace (forced) mosquito model
  desc: This is a null mosquito component used to test aquatic models.
  contents:
  - setup_mosquito_trace
  - get_config_mosquito_trace
  - output_mosquitoes.trace
  - step_mosquitoes.trace
  - compute_f.trace
  - compute_q.trace
  - compute_Z.trace
  - compute_oviposit.trace

- title: Aquatic (immature) mosquito component

  desc: >
    The aquatic mosquito component is responsible for updating aquatic mosquito
    populations which live in aquatic habitats. It must calculate how many eggs
    are oviposited by adults per day, add them to aquatic habitats, update the aquatic life stages, and calculate
    the number of emerging adults. Any model of immature mosquitoes in MicroMoB is required to
    implement the following interface methods. It is stored and dispatches on
    the object in `model$aqua`.
  contents:
    - output_aqua
    - step_aqua
    - compute_emergents

- subtitle: Trace (forced) aquatic model
  desc: >
    This is a model of aquatic mosquitoes where emergence is passed as a trace (forcing)
    term and it is not affected by endogenous dynamics.
  contents:
  - setup_aqua_trace
  - get_config_aqua_trace
  - output_aqua.trace
  - step_aqua.trace
  - compute_emergents.trace
  - compute_emergents.trace_deterministic
  - compute_emergents.trace_stochastic

- subtitle: Beverton-Holt aquatic model
  desc: >
    This is a simple non-linear model of aquatic (immature) dynamics with a single
    compartment.
  contents:
  - setup_aqua_BH
  - get_config_aqua_BH
  - output_aqua.BH
  - step_aqua.BH
  - step_aqua.BH_deterministic
  - step_aqua.BH_stochastic
  - compute_emergents.BH

- title: Human component

  desc: >
    The human component is responsible for updating human populations
    and their pathogen dynamics. Any model of humans in MicroMoB is required to
    implement the following interface methods. It is stored and dispatches on
    the object in `model$human`.
  contents:
  - step_humans
  - compute_wf
  - compute_x
  - compute_H
  - compute_Psi
  - observe_pfpr

- subtitle: SIS human model
  desc: >
    This model implements a simple SIS (Susceptible-Infected-Susceptible) model of humans with risk distributed
    according to time at risk matrices.
  contents:
  - setup_humans_SIS
  - get_config_humans_SIS
  - step_humans.SIS
  - step_humans.SIS_deterministic
  - step_humans.SIS_stochastic
  - compute_wf.SIS
  - compute_x.SIS
  - compute_H.SIS
  - compute_Psi.SIS
  - observe_pfpr.SIS

- subtitle: SIP human model
  desc: >
    The SIP (Susceptible-Infected-Protected) model is a simple extension of the SIS model that adds a
    class "Protected" for those who have recieved treatment and are temporarily protected from
    infection until prophylaxis decays
  contents:
  - setup_humans_SIP
  - step_humans.SIP
  - step_humans.SIP_deterministic
  - step_humans.SIP_stochastic
  - compute_wf.SIP
  - compute_x.SIP
  - compute_H.SIP
  - compute_Psi.SIP
  - observe_pfpr.SIP

- subtitle: MOI human model
  desc: >
    The MOI (multiplicity of infection) human model is a queueing model for superinfection,
    where persons can be infected by multiple distinct parasite broods.
  contents:
  - setup_humans_MOI
  - get_config_humans_MOI
  - step_humans.MOI
  - step_humans.MOI_deterministic
  - step_humans.MOI_stochastic
  - compute_wf.MOI
  - compute_x.MOI
  - compute_H.MOI
  - compute_Psi.MOI

- subtitle: SIR human model
  desc: >
    The SIR (Susceptible-Infected-Recovered) model is a simple model for many strongly
    immunizing arboviruses.
  contents:
  - setup_humans_SIR
  - get_config_humans_SIR
  - step_humans.SIR
  - step_humans.SIR_deterministic
  - step_humans.SIR_stochastic
  - compute_wf.SIR
  - compute_x.SIR
  - compute_H.SIR
  - compute_Psi.SIR

- title: Visitor component

  desc: >
    The visitor component is responsible for modeling human populations that are
    not part of the resident population of the geographic area being simulated.
    It is stored and dispatches on the object in `model$visitor`.
  contents:
  - compute_Wd
  - compute_xd

- subtitle: Trace visitor model
  desc: >
    This is a simple trace driven visitor model.
  contents:
  - setup_visitor_trace
  - get_config_visitor_trace
  - compute_Wd.trace
  - compute_xd.trace

- title: Alternative blood hosts component

  desc: >
    The alternative blood hosts component is responsible for modeling other blood
    host populations (livestock, dogs, etc.). It is stored and dispatches on the object in `model$alternative`.
  contents:
  - compute_O

- subtitle: Trace alternative blood hosts model
  desc: >
    This is a simple trace driven alternative blood hosts model.
  contents:
  - setup_alternative_trace
  - get_config_alternative_trace
  - compute_O.trace

- title: Utility and global methods

- subtitle: Utilities for users
  desc: >
    These are utilities which are intended for typical users to access.
  contents:
  - MicroMoB
  - make_MicroMoB
  - get_tnow
  - get_tmax
  - api_config_global
  - sample_stochastic_vector
  - sample_stochastic_matrix
  - draw_multinom
  - strata_to_residency_proportion
  - strata_to_residency_counts
  - time_patch_varying_parameter
  - time_varying_parameter

- subtitle: Internal utilities
  desc: >
    These are lower-level utilities. They are exported and documented because other
    packages which extend Micro-MoB may want to use them.
  contents:
  - is_binary
  - approx_equal
  - divmod
  - distribute

- title: Parameter setters

  desc: >
    For interfacing with other APIs it is useful for models to have setter functions
    to modify parameters after a model has been set up (e.g; during a simulation).

- subtitle: Ross-Macdonald (RM) mosquito model
  desc: Parameter setters for the RM mosquito model
  contents:
  - modify_f_mosquito_RM
  - modify_q_mosquito_RM
  - modify_eip_mosquito_RM
  - modify_p_mosquito_RM
  - modify_psi_mosquito_RM
  - modify_nu_mosquito_RM
  - modify_kappa_mosquito_RM
